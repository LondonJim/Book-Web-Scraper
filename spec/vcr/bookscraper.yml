---
http_interactions:
- request:
    method: get
    uri: http://books.toscrape.com/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:21 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:39:03 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:21 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-1.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:21 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:21 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-2.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:21 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:21 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-3.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:21 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:21 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-4.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:21 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:21 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-5.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:21 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:21 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-6.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:21 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:21 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-7.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:21 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:21 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-8.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:21 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:21 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-9.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:21 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:21 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-10.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:21 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:21 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-11.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:21 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:21 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-12.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:22 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:22 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-13.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:22 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:22 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-14.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:22 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:22 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-15.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:22 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        Cgo8IURPQ1RZUEUgaHRtbD4KPCEtLVtpZiBsdCBJRSA3XT4gICAgICA8aHRtbCBsYW5nPSJlbi11cyIgY2xhc3M9Im5vLWpzIGx0LWllOSBsdC1pZTggbHQtaWU3Ij4gPCFbZW5kaWZdLS0+CjwhLS1baWYgSUUgN10+ICAgICAgICAgPGh0bWwgbGFuZz0iZW4tdXMiIGNsYXNzPSJuby1qcyBsdC1pZTkgbHQtaWU4Ij4gPCFbZW5kaWZdLS0+CjwhLS1baWYgSUUgOF0+ICAgICAgICAgPGh0bWwgbGFuZz0iZW4tdXMiIGNsYXNzPSJuby1qcyBsdC1pZTkiPiA8IVtlbmRpZl0tLT4KPCEtLVtpZiBndCBJRSA4XT48IS0tPiA8aHRtbCBsYW5nPSJlbi11cyIgY2xhc3M9Im5vLWpzIj4gPCEtLTwhW2VuZGlmXS0tPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPgogICAgQWxsIHByb2R1Y3RzIHwgQm9va3MgdG8gU2NyYXBlIC0gU2FuZGJveAo8L3RpdGxlPgoKICAgICAgICA8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYtOCIgLz4KICAgICAgICA8bWV0YSBuYW1lPSJjcmVhdGVkIiBjb250ZW50PSIyNHRoIEp1biAyMDE2IDA5OjMyIiAvPgogICAgICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSIiIC8+CiAgICAgICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCIgLz4KICAgICAgICA8bWV0YSBuYW1lPSJyb2JvdHMiIGNvbnRlbnQ9Ik5PQVJDSElWRSxOT0NBQ0hFIiAvPgoKICAgICAgICA8IS0tIExlIEhUTUw1IHNoaW0sIGZvciBJRTYtOCBzdXBwb3J0IG9mIEhUTUwgZWxlbWVudHMgLS0+CiAgICAgICAgPCEtLVtpZiBsdCBJRSA5XT4KICAgICAgICA8c2NyaXB0IHNyYz0iLy9odG1sNXNoaW0uZ29vZ2xlY29kZS5jb20vc3ZuL3RydW5rL2h0bWw1LmpzIj48L3NjcmlwdD4KICAgICAgICA8IVtlbmRpZl0tLT4KCiAgICAgICAgCiAgICAgICAgICAgIDxsaW5rIHJlbD0ic2hvcnRjdXQgaWNvbiIgaHJlZj0iLi4vc3RhdGljL29zY2FyL2Zhdmljb24uaWNvIiAvPgogICAgICAgIAoKICAgICAgICAKICAgICAgICAKICAgIAogICAgCiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iLi4vc3RhdGljL29zY2FyL2Nzcy9zdHlsZXMuY3NzIiAvPgogICAgCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii4uL3N0YXRpYy9vc2Nhci9qcy9ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXIvYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLmNzcyIgLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii4uL3N0YXRpYy9vc2Nhci9jc3MvZGF0ZXRpbWVwaWNrZXIuY3NzIiAvPgoKCiAgICAgICAgCiAgICAgICAgCgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIAoKICAgICAgICAKICAgIDwvaGVhZD4KCiAgICA8Ym9keSBpZD0iZGVmYXVsdCIgY2xhc3M9ImRlZmF1bHQiPgogICAgICAgIAogICAgICAgIAogICAgCiAgICAKICAgIDxoZWFkZXIgY2xhc3M9ImhlYWRlciBjb250YWluZXItZmx1aWQiPgogICAgICAgIDxkaXYgY2xhc3M9InBhZ2VfaW5uZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTggaDEiPjxhIGhyZWY9Ii4uL2luZGV4Lmh0bWwiPkJvb2tzIHRvIFNjcmFwZTwvYT48c21hbGw+IFdlIGxvdmUgYmVpbmcgc2NyYXBlZCE8L3NtYWxsPgo8L2Rpdj4KCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2hlYWRlcj4KCiAgICAKICAgIAo8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQgcGFnZSI+CiAgICA8ZGl2IGNsYXNzPSJwYWdlX2lubmVyIj4KICAgICAgICAKICAgIDx1bCBjbGFzcz0iYnJlYWRjcnVtYiI+CiAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIuLi9pbmRleC5odG1sIj5Ib21lPC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJhY3RpdmUiPkFsbCBwcm9kdWN0czwvbGk+CiAgICA8L3VsPgoKICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgoKICAgICAgICAgICAgPGFzaWRlIGNsYXNzPSJzaWRlYmFyIGNvbC1zbS00IGNvbC1tZC0zIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBpZD0icHJvbW90aW9uc19sZWZ0Ij4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAKICAgIAogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9InNpZGVfY2F0ZWdvcmllcyI+CiAgICAgICAgICAgIDx1bCBjbGFzcz0ibmF2IG5hdi1saXN0Ij4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3NfMS9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEJvb2tzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvdHJhdmVsXzIvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUcmF2ZWwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvbXlzdGVyeV8zL2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTXlzdGVyeQogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9oaXN0b3JpY2FsLWZpY3Rpb25fNC9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhpc3RvcmljYWwgRmljdGlvbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9zZXF1ZW50aWFsLWFydF81L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2VxdWVudGlhbCBBcnQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvY2xhc3NpY3NfNi9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENsYXNzaWNzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL3BoaWxvc29waHlfNy9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBoaWxvc29waHkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3Mvcm9tYW5jZV84L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUm9tYW5jZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy93b21lbnMtZmljdGlvbl85L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgV29tZW5zIEZpY3Rpb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvZmljdGlvbl8xMC9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZpY3Rpb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvY2hpbGRyZW5zXzExL2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2hpbGRyZW5zCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL3JlbGlnaW9uXzEyL2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVsaWdpb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3Mvbm9uZmljdGlvbl8xMy9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5vbmZpY3Rpb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvbXVzaWNfMTQvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNdXNpYwogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9kZWZhdWx0XzE1L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRGVmYXVsdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9zY2llbmNlLWZpY3Rpb25fMTYvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTY2llbmNlIEZpY3Rpb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3Mvc3BvcnRzLWFuZC1nYW1lc18xNy9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNwb3J0cyBhbmQgR2FtZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvYWRkLWEtY29tbWVudF8xOC9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFkZCBhIGNvbW1lbnQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvZmFudGFzeV8xOS9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZhbnRhc3kKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvbmV3LWFkdWx0XzIwL2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmV3IEFkdWx0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL3lvdW5nLWFkdWx0XzIxL2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWW91bmcgQWR1bHQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3Mvc2NpZW5jZV8yMi9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNjaWVuY2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvcG9ldHJ5XzIzL2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUG9ldHJ5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL3BhcmFub3JtYWxfMjQvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQYXJhbm9ybWFsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL2FydF8yNS9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFydAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9wc3ljaG9sb2d5XzI2L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUHN5Y2hvbG9neQogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9hdXRvYmlvZ3JhcGh5XzI3L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQXV0b2Jpb2dyYXBoeQogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9wYXJlbnRpbmdfMjgvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQYXJlbnRpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvYWR1bHQtZmljdGlvbl8yOS9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFkdWx0IEZpY3Rpb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvaHVtb3JfMzAvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIdW1vcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9ob3Jyb3JfMzEvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIb3Jyb3IKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvaGlzdG9yeV8zMi9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhpc3RvcnkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvZm9vZC1hbmQtZHJpbmtfMzMvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGb29kIGFuZCBEcmluawogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9jaHJpc3RpYW4tZmljdGlvbl8zNC9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENocmlzdGlhbiBGaWN0aW9uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL2J1c2luZXNzXzM1L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQnVzaW5lc3MKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvYmlvZ3JhcGh5XzM2L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQmlvZ3JhcGh5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL3RocmlsbGVyXzM3L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhyaWxsZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvY29udGVtcG9yYXJ5XzM4L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29udGVtcG9yYXJ5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL3NwaXJpdHVhbGl0eV8zOS9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNwaXJpdHVhbGl0eQogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9hY2FkZW1pY180MC9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFjYWRlbWljCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL3NlbGYtaGVscF80MS9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlbGYgSGVscAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9oaXN0b3JpY2FsXzQyL2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSGlzdG9yaWNhbAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9jaHJpc3RpYW5fNDMvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDaHJpc3RpYW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3Mvc3VzcGVuc2VfNDQvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdXNwZW5zZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9zaG9ydC1zdG9yaWVzXzQ1L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2hvcnQgU3RvcmllcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9ub3ZlbHNfNDYvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3ZlbHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvaGVhbHRoXzQ3L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSGVhbHRoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL3BvbGl0aWNzXzQ4L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUG9saXRpY3MKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvY3VsdHVyYWxfNDkvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDdWx0dXJhbAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9lcm90aWNhXzUwL2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXJvdGljYQogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9jcmltZV81MS9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENyaW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICAKICAgIAoKICAgICAgICAgICAgPC9hc2lkZT4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS04IGNvbC1tZC05Ij4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFnZS1oZWFkZXIgYWN0aW9uIj4KICAgICAgICAgICAgICAgICAgICA8aDE+QWxsIHByb2R1Y3RzPC9oMT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgCgoKCjxkaXYgaWQ9Im1lc3NhZ2VzIj4KCjwvZGl2PgoKCiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwcm9tb3Rpb25zIj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIAogICAgPGZvcm0gbWV0aG9kPSJnZXQiIGNsYXNzPSJmb3JtLWhvcml6b250YWwiPgogICAgICAgIAogICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6bm9uZSI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICA8L2Rpdj4KCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz4xMDAwPC9zdHJvbmc+IHJlc3VsdHMgLSBzaG93aW5nIDxzdHJvbmc+MjgxPC9zdHJvbmc+IHRvIDxzdHJvbmc+MzAwPC9zdHJvbmc+LgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAKICAgIDwvZm9ybT4KICAgIAogICAgICAgIDxzZWN0aW9uPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhbGVydCBhbGVydC13YXJuaW5nIiByb2xlPSJhbGVydCI+PHN0cm9uZz5XYXJuaW5nITwvc3Ryb25nPiBUaGlzIGlzIGEgZGVtbyB3ZWJzaXRlIGZvciB3ZWIgc2NyYXBpbmcgcHVycG9zZXMuIFByaWNlcyBhbmQgcmF0aW5ncyBoZXJlIHdlcmUgcmFuZG9tbHkgYXNzaWduZWQgYW5kIGhhdmUgbm8gcmVhbCBtZWFuaW5nLjwvZGl2PgoKICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxvbCBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJjb2wteHMtNiBjb2wtc20tNCBjb2wtbWQtMyBjb2wtbGctMyI+CgoKCgoKCiAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZHVjdF9wb2QiPgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZV9jb250YWluZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0ibXktbmFtZS1pcy1sdWN5LWJhcnRvbl83MjAvaW5kZXguaHRtbCI+PGltZyBzcmM9Ii4uL21lZGlhL2NhY2hlL2NhL2IxL2NhYjE1MGU1NTZiNWZhYjY2M2E5ZmVjMDBlZDk3OTQzLmpwZyIgYWx0PSJNeSBOYW1lIElzIEx1Y3kgQmFydG9uIiBjbGFzcz0idGh1bWJuYWlsIj48L2E+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJzdGFyLXJhdGluZyBPbmUiPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIAogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGgzPjxhIGhyZWY9Im15LW5hbWUtaXMtbHVjeS1iYXJ0b25fNzIwL2luZGV4Lmh0bWwiIHRpdGxlPSJNeSBOYW1lIElzIEx1Y3kgQmFydG9uIj5NeSBOYW1lIElzIEx1Y3kgLi4uPC9hPjwvaDM+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0X3ByaWNlIj4KICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICAgICAgPHAgY2xhc3M9InByaWNlX2NvbG9yIj7CozQxLjU2PC9wPgogICAgCgo8cCBjbGFzcz0iaW5zdG9jayBhdmFpbGFiaWxpdHkiPgogICAgPGkgY2xhc3M9Imljb24tb2siPjwvaT4KICAgIAogICAgICAgIEluIHN0b2NrCiAgICAKPC9wPgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICA8Zm9ybT4KICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBidG4tYmxvY2siIGRhdGEtbG9hZGluZy10ZXh0PSJBZGRpbmcuLi4iPkFkZCB0byBiYXNrZXQ8L2J1dHRvbj4KICAgIDwvZm9ybT4KCgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgPC9hcnRpY2xlPgoKPC9saT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJjb2wteHMtNiBjb2wtc20tNCBjb2wtbWQtMyBjb2wtbGctMyI+CgoKCgoKCiAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZHVjdF9wb2QiPgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZV9jb250YWluZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0ibXktbXJzLWJyb3duXzcxOS9pbmRleC5odG1sIj48aW1nIHNyYz0iLi4vbWVkaWEvY2FjaGUvZTAvNzkvZTA3OTA2YzFlNTA3MDU1ZGE5YTIyNjBhNzRmNTgyNzMuanBnIiBhbHQ9Ik15IE1ycy4gQnJvd24iIGNsYXNzPSJ0aHVtYm5haWwiPjwvYT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHAgY2xhc3M9InN0YXItcmF0aW5nIFRocmVlIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAKICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxoMz48YSBocmVmPSJteS1tcnMtYnJvd25fNzE5L2luZGV4Lmh0bWwiIHRpdGxlPSJNeSBNcnMuIEJyb3duIj5NeSBNcnMuIEJyb3duPC9hPjwvaDM+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0X3ByaWNlIj4KICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICAgICAgPHAgY2xhc3M9InByaWNlX2NvbG9yIj7CozI0LjQ4PC9wPgogICAgCgo8cCBjbGFzcz0iaW5zdG9jayBhdmFpbGFiaWxpdHkiPgogICAgPGkgY2xhc3M9Imljb24tb2siPjwvaT4KICAgIAogICAgICAgIEluIHN0b2NrCiAgICAKPC9wPgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICA8Zm9ybT4KICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBidG4tYmxvY2siIGRhdGEtbG9hZGluZy10ZXh0PSJBZGRpbmcuLi4iPkFkZCB0byBiYXNrZXQ8L2J1dHRvbj4KICAgIDwvZm9ybT4KCgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgPC9hcnRpY2xlPgoKPC9saT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJjb2wteHMtNiBjb2wtc20tNCBjb2wtbWQtMyBjb2wtbGctMyI+CgoKCgoKCiAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZHVjdF9wb2QiPgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZV9jb250YWluZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0ibXkta2luZC1vZi1jcmF6eV83MTgvaW5kZXguaHRtbCI+PGltZyBzcmM9Ii4uL21lZGlhL2NhY2hlLzQ2LzZlLzQ2NmU5NjM2ODE5YWFkMTEyNmFjNmNlZmI1MzEzYmE4LmpwZyIgYWx0PSJNeSBLaW5kIG9mIENyYXp5IiBjbGFzcz0idGh1bWJuYWlsIj48L2E+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJzdGFyLXJhdGluZyBPbmUiPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIAogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGgzPjxhIGhyZWY9Im15LWtpbmQtb2YtY3JhenlfNzE4L2luZGV4Lmh0bWwiIHRpdGxlPSJNeSBLaW5kIG9mIENyYXp5Ij5NeSBLaW5kIG9mIENyYXp5PC9hPjwvaDM+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0X3ByaWNlIj4KICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICAgICAgPHAgY2xhc3M9InByaWNlX2NvbG9yIj7CozQwLjM2PC9wPgogICAgCgo8cCBjbGFzcz0iaW5zdG9jayBhdmFpbGFiaWxpdHkiPgogICAgPGkgY2xhc3M9Imljb24tb2siPjwvaT4KICAgIAogICAgICAgIEluIHN0b2NrCiAgICAKPC9wPgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICA8Zm9ybT4KICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBidG4tYmxvY2siIGRhdGEtbG9hZGluZy10ZXh0PSJBZGRpbmcuLi4iPkFkZCB0byBiYXNrZXQ8L2J1dHRvbj4KICAgIDwvZm9ybT4KCgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgPC9hcnRpY2xlPgoKPC9saT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJjb2wteHMtNiBjb2wtc20tNCBjb2wtbWQtMyBjb2wtbGctMyI+CgoKCgoKCiAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZHVjdF9wb2QiPgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZV9jb250YWluZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0ibXItbWVyY2VkZXMtYmlsbC1ob2RnZXMtdHJpbG9neS0xXzcxNy9pbmRleC5odG1sIj48aW1nIHNyYz0iLi4vbWVkaWEvY2FjaGUvYTcvZjAvYTdmMDkyYTdiNzlmODQ4ZGYwMjI2ZjgwOGZlZDQ4OWIuanBnIiBhbHQ9Ik1yLiBNZXJjZWRlcyAoQmlsbCBIb2RnZXMgVHJpbG9neSAjMSkiIGNsYXNzPSJ0aHVtYm5haWwiPjwvYT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHAgY2xhc3M9InN0YXItcmF0aW5nIE9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgCiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8aDM+PGEgaHJlZj0ibXItbWVyY2VkZXMtYmlsbC1ob2RnZXMtdHJpbG9neS0xXzcxNy9pbmRleC5odG1sIiB0aXRsZT0iTXIuIE1lcmNlZGVzIChCaWxsIEhvZGdlcyBUcmlsb2d5ICMxKSI+TXIuIE1lcmNlZGVzIChCaWxsIEhvZGdlcyAuLi48L2E+PC9oMz4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3RfcHJpY2UiPgogICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgICAgICA8cCBjbGFzcz0icHJpY2VfY29sb3IiPsKjMjguOTA8L3A+CiAgICAKCjxwIGNsYXNzPSJpbnN0b2NrIGF2YWlsYWJpbGl0eSI+CiAgICA8aSBjbGFzcz0iaWNvbi1vayI+PC9pPgogICAgCiAgICAgICAgSW4gc3RvY2sKICAgIAo8L3A+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgIDxmb3JtPgogICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayIgZGF0YS1sb2FkaW5nLXRleHQ9IkFkZGluZy4uLiI+QWRkIHRvIGJhc2tldDwvYnV0dG9uPgogICAgPC9mb3JtPgoKCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L2FydGljbGU+Cgo8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImNvbC14cy02IGNvbC1zbS00IGNvbC1tZC0zIGNvbC1sZy0zIj4KCgoKCgoKICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9kdWN0X3BvZCI+CiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImltYWdlX2NvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJtb3JlLXRoYW4tbXVzaWMtY2hhc2luZy10aGUtZHJlYW0tMV83MTYvaW5kZXguaHRtbCI+PGltZyBzcmM9Ii4uL21lZGlhL2NhY2hlLzNmL2U3LzNmZTcwNzNhNWNhYWM4MTkyOTUyNGQyZDk0ODhmOTI4LmpwZyIgYWx0PSJNb3JlIFRoYW4gTXVzaWMgKENoYXNpbmcgdGhlIERyZWFtICMxKSIgY2xhc3M9InRodW1ibmFpbCI+PC9hPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8cCBjbGFzcz0ic3Rhci1yYXRpbmcgVHdvIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAKICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxoMz48YSBocmVmPSJtb3JlLXRoYW4tbXVzaWMtY2hhc2luZy10aGUtZHJlYW0tMV83MTYvaW5kZXguaHRtbCIgdGl0bGU9Ik1vcmUgVGhhbiBNdXNpYyAoQ2hhc2luZyB0aGUgRHJlYW0gIzEpIj5Nb3JlIFRoYW4gTXVzaWMgKENoYXNpbmcgLi4uPC9hPjwvaDM+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0X3ByaWNlIj4KICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICAgICAgPHAgY2xhc3M9InByaWNlX2NvbG9yIj7CozM3LjYxPC9wPgogICAgCgo8cCBjbGFzcz0iaW5zdG9jayBhdmFpbGFiaWxpdHkiPgogICAgPGkgY2xhc3M9Imljb24tb2siPjwvaT4KICAgIAogICAgICAgIEluIHN0b2NrCiAgICAKPC9wPgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICA8Zm9ybT4KICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBidG4tYmxvY2siIGRhdGEtbG9hZGluZy10ZXh0PSJBZGRpbmcuLi4iPkFkZCB0byBiYXNrZXQ8L2J1dHRvbj4KICAgIDwvZm9ybT4KCgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgPC9hcnRpY2xlPgoKPC9saT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJjb2wteHMtNiBjb2wtc20tNCBjb2wtbWQtMyBjb2wtbGctMyI+CgoKCgoKCiAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZHVjdF9wb2QiPgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZV9jb250YWluZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0ibWFkZS10by1zdGljay13aHktc29tZS1pZGVhcy1zdXJ2aXZlLWFuZC1vdGhlcnMtZGllXzcxNS9pbmRleC5odG1sIj48aW1nIHNyYz0iLi4vbWVkaWEvY2FjaGUvZTIvMmUvZTIyZTRhODJkOTdmOWYwNjg5ZDUyOTVhOThmNWRjZmYuanBnIiBhbHQ9Ik1hZGUgdG8gU3RpY2s6IFdoeSBTb21lIElkZWFzIFN1cnZpdmUgYW5kIE90aGVycyBEaWUiIGNsYXNzPSJ0aHVtYm5haWwiPjwvYT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHAgY2xhc3M9InN0YXItcmF0aW5nIEZpdmUiPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIAogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGgzPjxhIGhyZWY9Im1hZGUtdG8tc3RpY2std2h5LXNvbWUtaWRlYXMtc3Vydml2ZS1hbmQtb3RoZXJzLWRpZV83MTUvaW5kZXguaHRtbCIgdGl0bGU9Ik1hZGUgdG8gU3RpY2s6IFdoeSBTb21lIElkZWFzIFN1cnZpdmUgYW5kIE90aGVycyBEaWUiPk1hZGUgdG8gU3RpY2s6IFdoeSAuLi48L2E+PC9oMz4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3RfcHJpY2UiPgogICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgICAgICA8cCBjbGFzcz0icHJpY2VfY29sb3IiPsKjMzguODU8L3A+CiAgICAKCjxwIGNsYXNzPSJpbnN0b2NrIGF2YWlsYWJpbGl0eSI+CiAgICA8aSBjbGFzcz0iaWNvbi1vayI+PC9pPgogICAgCiAgICAgICAgSW4gc3RvY2sKICAgIAo8L3A+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgIDxmb3JtPgogICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayIgZGF0YS1sb2FkaW5nLXRleHQ9IkFkZGluZy4uLiI+QWRkIHRvIGJhc2tldDwvYnV0dG9uPgogICAgPC9mb3JtPgoKCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L2FydGljbGU+Cgo8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImNvbC14cy02IGNvbC1zbS00IGNvbC1tZC0zIGNvbC1sZy0zIj4KCgoKCgoKICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9kdWN0X3BvZCI+CiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImltYWdlX2NvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJsdWlzLXBhaW50cy10aGUtd29ybGRfNzE0L2luZGV4Lmh0bWwiPjxpbWcgc3JjPSIuLi9tZWRpYS9jYWNoZS84NS9lNy84NWU3NWQ1YTkzMDlkYTU4MDdjODJkZWNmM2Q5MDI2My5qcGciIGFsdD0iTHVpcyBQYWludHMgdGhlIFdvcmxkIiBjbGFzcz0idGh1bWJuYWlsIj48L2E+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJzdGFyLXJhdGluZyBUaHJlZSI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgCiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8aDM+PGEgaHJlZj0ibHVpcy1wYWludHMtdGhlLXdvcmxkXzcxNC9pbmRleC5odG1sIiB0aXRsZT0iTHVpcyBQYWludHMgdGhlIFdvcmxkIj5MdWlzIFBhaW50cyB0aGUgV29ybGQ8L2E+PC9oMz4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3RfcHJpY2UiPgogICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgICAgICA8cCBjbGFzcz0icHJpY2VfY29sb3IiPsKjNTMuOTU8L3A+CiAgICAKCjxwIGNsYXNzPSJpbnN0b2NrIGF2YWlsYWJpbGl0eSI+CiAgICA8aSBjbGFzcz0iaWNvbi1vayI+PC9pPgogICAgCiAgICAgICAgSW4gc3RvY2sKICAgIAo8L3A+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgIDxmb3JtPgogICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayIgZGF0YS1sb2FkaW5nLXRleHQ9IkFkZGluZy4uLiI+QWRkIHRvIGJhc2tldDwvYnV0dG9uPgogICAgPC9mb3JtPgoKCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L2FydGljbGU+Cgo8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImNvbC14cy02IGNvbC1zbS00IGNvbC1tZC0zIGNvbC1sZy0zIj4KCgoKCgoKICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9kdWN0X3BvZCI+CiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImltYWdlX2NvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJsdWNraWVzdC1naXJsLWFsaXZlXzcxMy9pbmRleC5odG1sIj48aW1nIHNyYz0iLi4vbWVkaWEvY2FjaGUvODEvYzAvODFjMGExY2UwM2RiODI1NjhlMjQ5NmRiOTQ1YTgyMjcuanBnIiBhbHQ9Ikx1Y2tpZXN0IEdpcmwgQWxpdmUiIGNsYXNzPSJ0aHVtYm5haWwiPjwvYT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHAgY2xhc3M9InN0YXItcmF0aW5nIFRocmVlIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAKICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxoMz48YSBocmVmPSJsdWNraWVzdC1naXJsLWFsaXZlXzcxMy9pbmRleC5odG1sIiB0aXRsZT0iTHVja2llc3QgR2lybCBBbGl2ZSI+THVja2llc3QgR2lybCBBbGl2ZTwvYT48L2gzPgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdF9wcmljZSI+CiAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgICAgIDxwIGNsYXNzPSJwcmljZV9jb2xvciI+wqM0OS44MzwvcD4KICAgIAoKPHAgY2xhc3M9Imluc3RvY2sgYXZhaWxhYmlsaXR5Ij4KICAgIDxpIGNsYXNzPSJpY29uLW9rIj48L2k+CiAgICAKICAgICAgICBJbiBzdG9jawogICAgCjwvcD4KCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgPGZvcm0+CiAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgYnRuLWJsb2NrIiBkYXRhLWxvYWRpbmctdGV4dD0iQWRkaW5nLi4uIj5BZGQgdG8gYmFza2V0PC9idXR0b24+CiAgICA8L2Zvcm0+CgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvYXJ0aWNsZT4KCjwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY29sLXhzLTYgY29sLXNtLTQgY29sLW1kLTMgY29sLWxnLTMiPgoKCgoKCgogICAgPGFydGljbGUgY2xhc3M9InByb2R1Y3RfcG9kIj4KICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2VfY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imxvd3JpZGVycy10by10aGUtY2VudGVyLW9mLXRoZS1lYXJ0aC1sb3dyaWRlcnMtaW4tc3BhY2UtMl83MTIvaW5kZXguaHRtbCI+PGltZyBzcmM9Ii4uL21lZGlhL2NhY2hlL2IyLzk3L2IyOTc4ZTk2MDY5ZGQ5MTc4NWU1YWIwYmM5OWMwMjJlLmpwZyIgYWx0PSJMb3dyaWRlcnMgdG8gdGhlIENlbnRlciBvZiB0aGUgRWFydGggKExvd3JpZGVycyBpbiBTcGFjZSAjMikiIGNsYXNzPSJ0aHVtYm5haWwiPjwvYT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHAgY2xhc3M9InN0YXItcmF0aW5nIFR3byI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgCiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8aDM+PGEgaHJlZj0ibG93cmlkZXJzLXRvLXRoZS1jZW50ZXItb2YtdGhlLWVhcnRoLWxvd3JpZGVycy1pbi1zcGFjZS0yXzcxMi9pbmRleC5odG1sIiB0aXRsZT0iTG93cmlkZXJzIHRvIHRoZSBDZW50ZXIgb2YgdGhlIEVhcnRoIChMb3dyaWRlcnMgaW4gU3BhY2UgIzIpIj5Mb3dyaWRlcnMgdG8gdGhlIENlbnRlciAuLi48L2E+PC9oMz4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3RfcHJpY2UiPgogICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgICAgICA8cCBjbGFzcz0icHJpY2VfY29sb3IiPsKjNTEuNTE8L3A+CiAgICAKCjxwIGNsYXNzPSJpbnN0b2NrIGF2YWlsYWJpbGl0eSI+CiAgICA8aSBjbGFzcz0iaWNvbi1vayI+PC9pPgogICAgCiAgICAgICAgSW4gc3RvY2sKICAgIAo8L3A+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgIDxmb3JtPgogICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayIgZGF0YS1sb2FkaW5nLXRleHQ9IkFkZGluZy4uLiI+QWRkIHRvIGJhc2tldDwvYnV0dG9uPgogICAgPC9mb3JtPgoKCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L2FydGljbGU+Cgo8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImNvbC14cy02IGNvbC1zbS00IGNvbC1tZC0zIGNvbC1sZy0zIj4KCgoKCgoKICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9kdWN0X3BvZCI+CiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImltYWdlX2NvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJsb3ZlLWlzLWEtbWl4LXRhcGUtbXVzaWMtMV83MTEvaW5kZXguaHRtbCI+PGltZyBzcmM9Ii4uL21lZGlhL2NhY2hlL2EyLzZkL2EyNmQ4NDQ5YWJiMzM4MWUwOTEyNmVkYTVmNGU4MTUxLmpwZyIgYWx0PSJMb3ZlIElzIGEgTWl4IFRhcGUgKE11c2ljICMxKSIgY2xhc3M9InRodW1ibmFpbCI+PC9hPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8cCBjbGFzcz0ic3Rhci1yYXRpbmcgT25lIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAKICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxoMz48YSBocmVmPSJsb3ZlLWlzLWEtbWl4LXRhcGUtbXVzaWMtMV83MTEvaW5kZXguaHRtbCIgdGl0bGU9IkxvdmUgSXMgYSBNaXggVGFwZSAoTXVzaWMgIzEpIj5Mb3ZlIElzIGEgTWl4IC4uLjwvYT48L2gzPgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdF9wcmljZSI+CiAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgICAgIDxwIGNsYXNzPSJwcmljZV9jb2xvciI+wqMxOC4wMzwvcD4KICAgIAoKPHAgY2xhc3M9Imluc3RvY2sgYXZhaWxhYmlsaXR5Ij4KICAgIDxpIGNsYXNzPSJpY29uLW9rIj48L2k+CiAgICAKICAgICAgICBJbiBzdG9jawogICAgCjwvcD4KCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgPGZvcm0+CiAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgYnRuLWJsb2NrIiBkYXRhLWxvYWRpbmctdGV4dD0iQWRkaW5nLi4uIj5BZGQgdG8gYmFza2V0PC9idXR0b24+CiAgICA8L2Zvcm0+CgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvYXJ0aWNsZT4KCjwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY29sLXhzLTYgY29sLXNtLTQgY29sLW1kLTMgY29sLWxnLTMiPgoKCgoKCgogICAgPGFydGljbGUgY2xhc3M9InByb2R1Y3RfcG9kIj4KICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2VfY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imxvb2tpbmctZm9yLWxvdmVseS1jb2xsZWN0aW5nLXRoZS1tb21lbnRzLXRoYXQtbWF0dGVyXzcxMC9pbmRleC5odG1sIj48aW1nIHNyYz0iLi4vbWVkaWEvY2FjaGUvNjEvMWUvNjExZTE4MDRhZDk2OGUzMDlhNWY3ODhkNGViYzFjYjQuanBnIiBhbHQ9Ikxvb2tpbmcgZm9yIExvdmVseTogQ29sbGVjdGluZyB0aGUgTW9tZW50cyB0aGF0IE1hdHRlciIgY2xhc3M9InRodW1ibmFpbCI+PC9hPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8cCBjbGFzcz0ic3Rhci1yYXRpbmcgRml2ZSI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgCiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8aDM+PGEgaHJlZj0ibG9va2luZy1mb3ItbG92ZWx5LWNvbGxlY3RpbmctdGhlLW1vbWVudHMtdGhhdC1tYXR0ZXJfNzEwL2luZGV4Lmh0bWwiIHRpdGxlPSJMb29raW5nIGZvciBMb3ZlbHk6IENvbGxlY3RpbmcgdGhlIE1vbWVudHMgdGhhdCBNYXR0ZXIiPkxvb2tpbmcgZm9yIExvdmVseTogQ29sbGVjdGluZyAuLi48L2E+PC9oMz4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3RfcHJpY2UiPgogICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgICAgICA8cCBjbGFzcz0icHJpY2VfY29sb3IiPsKjMjkuMTQ8L3A+CiAgICAKCjxwIGNsYXNzPSJpbnN0b2NrIGF2YWlsYWJpbGl0eSI+CiAgICA8aSBjbGFzcz0iaWNvbi1vayI+PC9pPgogICAgCiAgICAgICAgSW4gc3RvY2sKICAgIAo8L3A+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgIDxmb3JtPgogICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayIgZGF0YS1sb2FkaW5nLXRleHQ9IkFkZGluZy4uLiI+QWRkIHRvIGJhc2tldDwvYnV0dG9uPgogICAgPC9mb3JtPgoKCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L2FydGljbGU+Cgo8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImNvbC14cy02IGNvbC1zbS00IGNvbC1tZC0zIGNvbC1sZy0zIj4KCgoKCgoKICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9kdWN0X3BvZCI+CiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImltYWdlX2NvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJsaXZpbmctbGVhZGVyc2hpcC1ieS1pbnNpZ2h0LWEtZ29vZC1sZWFkZXItYWNoaWV2ZXMtYS1ncmVhdC1sZWFkZXItYnVpbGRzLW1vbnVtZW50c183MDkvaW5kZXguaHRtbCI+PGltZyBzcmM9Ii4uL21lZGlhL2NhY2hlL2U5LzVlL2U5NWU4MmYwOTY4MTcwOWJiMGY5MjczNDFkZGEyNzRlLmpwZyIgYWx0PSJMaXZpbmcgTGVhZGVyc2hpcCBieSBJbnNpZ2h0OiBBIEdvb2QgTGVhZGVyIEFjaGlldmVzLCBhIEdyZWF0IExlYWRlciBCdWlsZHMgTW9udW1lbnRzIiBjbGFzcz0idGh1bWJuYWlsIj48L2E+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJzdGFyLXJhdGluZyBGb3VyIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAKICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxoMz48YSBocmVmPSJsaXZpbmctbGVhZGVyc2hpcC1ieS1pbnNpZ2h0LWEtZ29vZC1sZWFkZXItYWNoaWV2ZXMtYS1ncmVhdC1sZWFkZXItYnVpbGRzLW1vbnVtZW50c183MDkvaW5kZXguaHRtbCIgdGl0bGU9IkxpdmluZyBMZWFkZXJzaGlwIGJ5IEluc2lnaHQ6IEEgR29vZCBMZWFkZXIgQWNoaWV2ZXMsIGEgR3JlYXQgTGVhZGVyIEJ1aWxkcyBNb251bWVudHMiPkxpdmluZyBMZWFkZXJzaGlwIGJ5IEluc2lnaHQ6IC4uLjwvYT48L2gzPgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdF9wcmljZSI+CiAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgICAgIDxwIGNsYXNzPSJwcmljZV9jb2xvciI+wqM0Ni45MTwvcD4KICAgIAoKPHAgY2xhc3M9Imluc3RvY2sgYXZhaWxhYmlsaXR5Ij4KICAgIDxpIGNsYXNzPSJpY29uLW9rIj48L2k+CiAgICAKICAgICAgICBJbiBzdG9jawogICAgCjwvcD4KCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgPGZvcm0+CiAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgYnRuLWJsb2NrIiBkYXRhLWxvYWRpbmctdGV4dD0iQWRkaW5nLi4uIj5BZGQgdG8gYmFza2V0PC9idXR0b24+CiAgICA8L2Zvcm0+CgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvYXJ0aWNsZT4KCjwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY29sLXhzLTYgY29sLXNtLTQgY29sLW1kLTMgY29sLWxnLTMiPgoKCgoKCgogICAgPGFydGljbGUgY2xhc3M9InByb2R1Y3RfcG9kIj4KICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2VfY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImxldC1pdC1vdXQtYS1qb3VybmV5LXRocm91Z2gtam91cm5hbGluZ183MDgvaW5kZXguaHRtbCI+PGltZyBzcmM9Ii4uL21lZGlhL2NhY2hlLzUxL2ZjLzUxZmNkM2U5Mzg0ODk0ZTZhNTNhNzUzZDJhYjg1NmVlLmpwZyIgYWx0PSJMZXQgSXQgT3V0OiBBIEpvdXJuZXkgVGhyb3VnaCBKb3VybmFsaW5nIiBjbGFzcz0idGh1bWJuYWlsIj48L2E+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJzdGFyLXJhdGluZyBGaXZlIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAKICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxoMz48YSBocmVmPSJsZXQtaXQtb3V0LWEtam91cm5leS10aHJvdWdoLWpvdXJuYWxpbmdfNzA4L2luZGV4Lmh0bWwiIHRpdGxlPSJMZXQgSXQgT3V0OiBBIEpvdXJuZXkgVGhyb3VnaCBKb3VybmFsaW5nIj5MZXQgSXQgT3V0OiBBIC4uLjwvYT48L2gzPgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdF9wcmljZSI+CiAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgICAgIDxwIGNsYXNzPSJwcmljZV9jb2xvciI+wqMyNi43OTwvcD4KICAgIAoKPHAgY2xhc3M9Imluc3RvY2sgYXZhaWxhYmlsaXR5Ij4KICAgIDxpIGNsYXNzPSJpY29uLW9rIj48L2k+CiAgICAKICAgICAgICBJbiBzdG9jawogICAgCjwvcD4KCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgPGZvcm0+CiAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgYnRuLWJsb2NrIiBkYXRhLWxvYWRpbmctdGV4dD0iQWRkaW5nLi4uIj5BZGQgdG8gYmFza2V0PC9idXR0b24+CiAgICA8L2Zvcm0+CgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvYXJ0aWNsZT4KCjwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY29sLXhzLTYgY29sLXNtLTQgY29sLW1kLTMgY29sLWxnLTMiPgoKCgoKCgogICAgPGFydGljbGUgY2xhc3M9InByb2R1Y3RfcG9kIj4KICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2VfY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImxhZHktbWlkbmlnaHQtdGhlLWRhcmstYXJ0aWZpY2VzLTFfNzA3L2luZGV4Lmh0bWwiPjxpbWcgc3JjPSIuLi9tZWRpYS9jYWNoZS84OS9hNi84OWE2MWQ0OGU5M2JjOTI1MzdjMGEyY2IyYzAwOTRiYi5qcGciIGFsdD0iTGFkeSBNaWRuaWdodCAoVGhlIERhcmsgQXJ0aWZpY2VzICMxKSIgY2xhc3M9InRodW1ibmFpbCI+PC9hPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8cCBjbGFzcz0ic3Rhci1yYXRpbmcgRml2ZSI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgCiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8aDM+PGEgaHJlZj0ibGFkeS1taWRuaWdodC10aGUtZGFyay1hcnRpZmljZXMtMV83MDcvaW5kZXguaHRtbCIgdGl0bGU9IkxhZHkgTWlkbmlnaHQgKFRoZSBEYXJrIEFydGlmaWNlcyAjMSkiPkxhZHkgTWlkbmlnaHQgKFRoZSBEYXJrIC4uLjwvYT48L2gzPgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdF9wcmljZSI+CiAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgICAgIDxwIGNsYXNzPSJwcmljZV9jb2xvciI+wqMxNi4yODwvcD4KICAgIAoKPHAgY2xhc3M9Imluc3RvY2sgYXZhaWxhYmlsaXR5Ij4KICAgIDxpIGNsYXNzPSJpY29uLW9rIj48L2k+CiAgICAKICAgICAgICBJbiBzdG9jawogICAgCjwvcD4KCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgPGZvcm0+CiAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgYnRuLWJsb2NrIiBkYXRhLWxvYWRpbmctdGV4dD0iQWRkaW5nLi4uIj5BZGQgdG8gYmFza2V0PC9idXR0b24+CiAgICA8L2Zvcm0+CgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvYXJ0aWNsZT4KCjwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY29sLXhzLTYgY29sLXNtLTQgY29sLW1kLTMgY29sLWxnLTMiPgoKCgoKCgogICAgPGFydGljbGUgY2xhc3M9InByb2R1Y3RfcG9kIj4KICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2VfY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Iml0cy1hbGwtZWFzeS1oZWFsdGh5LWRlbGljaW91cy13ZWVrbmlnaHQtbWVhbHMtaW4tdW5kZXItMzAtbWludXRlc183MDYvaW5kZXguaHRtbCI+PGltZyBzcmM9Ii4uL21lZGlhL2NhY2hlL2ZlLzY3L2ZlNjdjMzgxZDZhMGM0YzAwYTdjMTkxZDE2OTM5NTU0LmpwZyIgYWx0PSJJdCYjMzk7cyBBbGwgRWFzeTogSGVhbHRoeSwgRGVsaWNpb3VzIFdlZWtuaWdodCBNZWFscyBpbiB1bmRlciAzMCBNaW51dGVzIiBjbGFzcz0idGh1bWJuYWlsIj48L2E+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJzdGFyLXJhdGluZyBPbmUiPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIAogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGgzPjxhIGhyZWY9Iml0cy1hbGwtZWFzeS1oZWFsdGh5LWRlbGljaW91cy13ZWVrbmlnaHQtbWVhbHMtaW4tdW5kZXItMzAtbWludXRlc183MDYvaW5kZXguaHRtbCIgdGl0bGU9Ikl0JiMzOTtzIEFsbCBFYXN5OiBIZWFsdGh5LCBEZWxpY2lvdXMgV2Vla25pZ2h0IE1lYWxzIGluIHVuZGVyIDMwIE1pbnV0ZXMiPkl0JiMzOTtzIEFsbCBFYXN5OiBIZWFsdGh5LCAuLi48L2E+PC9oMz4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3RfcHJpY2UiPgogICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgICAgICA8cCBjbGFzcz0icHJpY2VfY29sb3IiPsKjMTkuNTU8L3A+CiAgICAKCjxwIGNsYXNzPSJpbnN0b2NrIGF2YWlsYWJpbGl0eSI+CiAgICA8aSBjbGFzcz0iaWNvbi1vayI+PC9pPgogICAgCiAgICAgICAgSW4gc3RvY2sKICAgIAo8L3A+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgIDxmb3JtPgogICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayIgZGF0YS1sb2FkaW5nLXRleHQ9IkFkZGluZy4uLiI+QWRkIHRvIGJhc2tldDwvYnV0dG9uPgogICAgPC9mb3JtPgoKCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L2FydGljbGU+Cgo8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImNvbC14cy02IGNvbC1zbS00IGNvbC1tZC0zIGNvbC1sZy0zIj4KCgoKCgoKICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9kdWN0X3BvZCI+CiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImltYWdlX2NvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJpc2xhbmQtb2YtZHJhZ29ucy11bndhbnRlZHMtN183MDUvaW5kZXguaHRtbCI+PGltZyBzcmM9Ii4uL21lZGlhL2NhY2hlLzc1L2I5Lzc1Yjk5NjkxNTk0ZmRlNzJjY2IxODMxNjI0Y2ZlZmY2LmpwZyIgYWx0PSJJc2xhbmQgb2YgRHJhZ29ucyAoVW53YW50ZWRzICM3KSIgY2xhc3M9InRodW1ibmFpbCI+PC9hPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8cCBjbGFzcz0ic3Rhci1yYXRpbmcgT25lIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAKICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxoMz48YSBocmVmPSJpc2xhbmQtb2YtZHJhZ29ucy11bndhbnRlZHMtN183MDUvaW5kZXguaHRtbCIgdGl0bGU9IklzbGFuZCBvZiBEcmFnb25zIChVbndhbnRlZHMgIzcpIj5Jc2xhbmQgb2YgRHJhZ29ucyAoVW53YW50ZWRzIC4uLjwvYT48L2gzPgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdF9wcmljZSI+CiAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgICAgIDxwIGNsYXNzPSJwcmljZV9jb2xvciI+wqMyOS42NTwvcD4KICAgIAoKPHAgY2xhc3M9Imluc3RvY2sgYXZhaWxhYmlsaXR5Ij4KICAgIDxpIGNsYXNzPSJpY29uLW9rIj48L2k+CiAgICAKICAgICAgICBJbiBzdG9jawogICAgCjwvcD4KCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgPGZvcm0+CiAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgYnRuLWJsb2NrIiBkYXRhLWxvYWRpbmctdGV4dD0iQWRkaW5nLi4uIj5BZGQgdG8gYmFza2V0PC9idXR0b24+CiAgICA8L2Zvcm0+CgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvYXJ0aWNsZT4KCjwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY29sLXhzLTYgY29sLXNtLTQgY29sLW1kLTMgY29sLWxnLTMiPgoKCgoKCgogICAgPGFydGljbGUgY2xhc3M9InByb2R1Y3RfcG9kIj4KICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2VfY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imkta25vdy13aGF0LWltLWRvaW5nLWFuZC1vdGhlci1saWVzLWktdGVsbC1teXNlbGYtZGlzcGF0Y2hlcy1mcm9tLWEtbGlmZS11bmRlci1jb25zdHJ1Y3Rpb25fNzA0L2luZGV4Lmh0bWwiPjxpbWcgc3JjPSIuLi9tZWRpYS9jYWNoZS9lYS83Yi9lYTdiY2FjNGIyN2E1YmY2ZDRmODEyNWJiN2FmMzM2MS5qcGciIGFsdD0iSSBLbm93IFdoYXQgSSYjMzk7bSBEb2luZyAtLSBhbmQgT3RoZXIgTGllcyBJIFRlbGwgTXlzZWxmOiBEaXNwYXRjaGVzIGZyb20gYSBMaWZlIFVuZGVyIENvbnN0cnVjdGlvbiIgY2xhc3M9InRodW1ibmFpbCI+PC9hPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8cCBjbGFzcz0ic3Rhci1yYXRpbmcgRm91ciI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgCiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8aDM+PGEgaHJlZj0iaS1rbm93LXdoYXQtaW0tZG9pbmctYW5kLW90aGVyLWxpZXMtaS10ZWxsLW15c2VsZi1kaXNwYXRjaGVzLWZyb20tYS1saWZlLXVuZGVyLWNvbnN0cnVjdGlvbl83MDQvaW5kZXguaHRtbCIgdGl0bGU9IkkgS25vdyBXaGF0IEkmIzM5O20gRG9pbmcgLS0gYW5kIE90aGVyIExpZXMgSSBUZWxsIE15c2VsZjogRGlzcGF0Y2hlcyBmcm9tIGEgTGlmZSBVbmRlciBDb25zdHJ1Y3Rpb24iPkkgS25vdyBXaGF0IEkmIzM5O20gLi4uPC9hPjwvaDM+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0X3ByaWNlIj4KICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICAgICAgPHAgY2xhc3M9InByaWNlX2NvbG9yIj7CozI1Ljk4PC9wPgogICAgCgo8cCBjbGFzcz0iaW5zdG9jayBhdmFpbGFiaWxpdHkiPgogICAgPGkgY2xhc3M9Imljb24tb2siPjwvaT4KICAgIAogICAgICAgIEluIHN0b2NrCiAgICAKPC9wPgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICA8Zm9ybT4KICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBidG4tYmxvY2siIGRhdGEtbG9hZGluZy10ZXh0PSJBZGRpbmcuLi4iPkFkZCB0byBiYXNrZXQ8L2J1dHRvbj4KICAgIDwvZm9ybT4KCgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgPC9hcnRpY2xlPgoKPC9saT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJjb2wteHMtNiBjb2wtc20tNCBjb2wtbWQtMyBjb2wtbGctMyI+CgoKCgoKCiAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZHVjdF9wb2QiPgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZV9jb250YWluZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaS1hbS1waWxncmltLXBpbGdyaW0tMV83MDMvaW5kZXguaHRtbCI+PGltZyBzcmM9Ii4uL21lZGlhL2NhY2hlL2VkLzA3L2VkMDdjOWU3YzUzZDRmMzNhNmViN2Q0MWViMGU2ZDRhLmpwZyIgYWx0PSJJIEFtIFBpbGdyaW0gKFBpbGdyaW0gIzEpIiBjbGFzcz0idGh1bWJuYWlsIj48L2E+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJzdGFyLXJhdGluZyBGb3VyIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAKICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxoMz48YSBocmVmPSJpLWFtLXBpbGdyaW0tcGlsZ3JpbS0xXzcwMy9pbmRleC5odG1sIiB0aXRsZT0iSSBBbSBQaWxncmltIChQaWxncmltICMxKSI+SSBBbSBQaWxncmltIChQaWxncmltIC4uLjwvYT48L2gzPgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdF9wcmljZSI+CiAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgICAgIDxwIGNsYXNzPSJwcmljZV9jb2xvciI+wqMxMC42MDwvcD4KICAgIAoKPHAgY2xhc3M9Imluc3RvY2sgYXZhaWxhYmlsaXR5Ij4KICAgIDxpIGNsYXNzPSJpY29uLW9rIj48L2k+CiAgICAKICAgICAgICBJbiBzdG9jawogICAgCjwvcD4KCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgPGZvcm0+CiAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgYnRuLWJsb2NrIiBkYXRhLWxvYWRpbmctdGV4dD0iQWRkaW5nLi4uIj5BZGQgdG8gYmFza2V0PC9idXR0b24+CiAgICA8L2Zvcm0+CgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvYXJ0aWNsZT4KCjwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY29sLXhzLTYgY29sLXNtLTQgY29sLW1kLTMgY29sLWxnLTMiPgoKCgoKCgogICAgPGFydGljbGUgY2xhc3M9InByb2R1Y3RfcG9kIj4KICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2VfY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh5cGVyYm9sZS1hbmQtYS1oYWxmLXVuZm9ydHVuYXRlLXNpdHVhdGlvbnMtZmxhd2VkLWNvcGluZy1tZWNoYW5pc21zLW1heWhlbS1hbmQtb3RoZXItdGhpbmdzLXRoYXQtaGFwcGVuZWRfNzAyL2luZGV4Lmh0bWwiPjxpbWcgc3JjPSIuLi9tZWRpYS9jYWNoZS9iNS9hOS9iNWE5MGQxYzM2YTk2NTEzOTQyZjAwNjM0NWFjZTNkMi5qcGciIGFsdD0iSHlwZXJib2xlIGFuZCBhIEhhbGY6IFVuZm9ydHVuYXRlIFNpdHVhdGlvbnMsIEZsYXdlZCBDb3BpbmcgTWVjaGFuaXNtcywgTWF5aGVtLCBhbmQgT3RoZXIgVGhpbmdzIFRoYXQgSGFwcGVuZWQiIGNsYXNzPSJ0aHVtYm5haWwiPjwvYT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHAgY2xhc3M9InN0YXItcmF0aW5nIEZpdmUiPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIAogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGgzPjxhIGhyZWY9Imh5cGVyYm9sZS1hbmQtYS1oYWxmLXVuZm9ydHVuYXRlLXNpdHVhdGlvbnMtZmxhd2VkLWNvcGluZy1tZWNoYW5pc21zLW1heWhlbS1hbmQtb3RoZXItdGhpbmdzLXRoYXQtaGFwcGVuZWRfNzAyL2luZGV4Lmh0bWwiIHRpdGxlPSJIeXBlcmJvbGUgYW5kIGEgSGFsZjogVW5mb3J0dW5hdGUgU2l0dWF0aW9ucywgRmxhd2VkIENvcGluZyBNZWNoYW5pc21zLCBNYXloZW0sIGFuZCBPdGhlciBUaGluZ3MgVGhhdCBIYXBwZW5lZCI+SHlwZXJib2xlIGFuZCBhIEhhbGY6IC4uLjwvYT48L2gzPgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdF9wcmljZSI+CiAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgICAgIDxwIGNsYXNzPSJwcmljZV9jb2xvciI+wqMxNC43NTwvcD4KICAgIAoKPHAgY2xhc3M9Imluc3RvY2sgYXZhaWxhYmlsaXR5Ij4KICAgIDxpIGNsYXNzPSJpY29uLW9rIj48L2k+CiAgICAKICAgICAgICBJbiBzdG9jawogICAgCjwvcD4KCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgPGZvcm0+CiAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgYnRuLWJsb2NrIiBkYXRhLWxvYWRpbmctdGV4dD0iQWRkaW5nLi4uIj5BZGQgdG8gYmFza2V0PC9idXR0b24+CiAgICA8L2Zvcm0+CgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvYXJ0aWNsZT4KCjwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY29sLXhzLTYgY29sLXNtLTQgY29sLW1kLTMgY29sLWxnLTMiPgoKCgoKCgogICAgPGFydGljbGUgY2xhc3M9InByb2R1Y3RfcG9kIj4KICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2VfY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh1c2gtaHVzaC1odXNoLWh1c2gtMV83MDEvaW5kZXguaHRtbCI+PGltZyBzcmM9Ii4uL21lZGlhL2NhY2hlLzJhL2I5LzJhYjkxNDc5ZmU0ODBlOTY0ZjMxOWZhOGFjNjk5MWIyLmpwZyIgYWx0PSJIdXNoLCBIdXNoIChIdXNoLCBIdXNoICMxKSIgY2xhc3M9InRodW1ibmFpbCI+PC9hPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8cCBjbGFzcz0ic3Rhci1yYXRpbmcgVGhyZWUiPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIAogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGgzPjxhIGhyZWY9Imh1c2gtaHVzaC1odXNoLWh1c2gtMV83MDEvaW5kZXguaHRtbCIgdGl0bGU9Ikh1c2gsIEh1c2ggKEh1c2gsIEh1c2ggIzEpIj5IdXNoLCBIdXNoIChIdXNoLCBIdXNoIC4uLjwvYT48L2gzPgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdF9wcmljZSI+CiAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgICAgIDxwIGNsYXNzPSJwcmljZV9jb2xvciI+wqM0Ny4wMjwvcD4KICAgIAoKPHAgY2xhc3M9Imluc3RvY2sgYXZhaWxhYmlsaXR5Ij4KICAgIDxpIGNsYXNzPSJpY29uLW9rIj48L2k+CiAgICAKICAgICAgICBJbiBzdG9jawogICAgCjwvcD4KCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgPGZvcm0+CiAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgYnRuLWJsb2NrIiBkYXRhLWxvYWRpbmctdGV4dD0iQWRkaW5nLi4uIj5BZGQgdG8gYmFza2V0PC9idXR0b24+CiAgICA8L2Zvcm0+CgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvYXJ0aWNsZT4KCjwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8L29sPgogICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2PgogICAgICAgIDx1bCBjbGFzcz0icGFnZXIiPgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0icHJldmlvdXMiPjxhIGhyZWY9InBhZ2UtMTQuaHRtbCI+cHJldmlvdXM8L2E+PC9saT4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxsaSBjbGFzcz0iY3VycmVudCI+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgUGFnZSAxNSBvZiA1MAogICAgICAgICAgICAKICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Im5leHQiPjxhIGhyZWY9InBhZ2UtMTYuaHRtbCI+bmV4dDwvYT48L2xpPgogICAgICAgICAgICAKICAgICAgICA8L3VsPgogICAgPC9kaXY+CgoKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9zZWN0aW9uPgogICAgCgoKICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIDwvZGl2PjwhLS0gL3JvdyAtLT4KICAgIDwvZGl2PjwhLS0gL3BhZ2VfaW5uZXIgLS0+CjwvZGl2PjwhLS0gL2NvbnRhaW5lci1mbHVpZCAtLT4KCgogICAgCjxmb290ZXIgY2xhc3M9ImZvb3RlciBjb250YWluZXItZmx1aWQiPgogICAgCiAgICAgICAgCiAgICAKPC9mb290ZXI+CgoKICAgICAgICAKICAgICAgICAKICAKICAgICAgICAgICAgPCEtLSBqUXVlcnkgLS0+CiAgICAgICAgICAgIDxzY3JpcHQgc3JjPSJodHRwOi8vYWpheC5nb29nbGVhcGlzLmNvbS9hamF4L2xpYnMvanF1ZXJ5LzEuOS4xL2pxdWVyeS5taW4uanMiPjwvc2NyaXB0PgogICAgICAgICAgICA8c2NyaXB0PndpbmRvdy5qUXVlcnkgfHwgZG9jdW1lbnQud3JpdGUoJzxzY3JpcHQgc3JjPSIuLi9zdGF0aWMvb3NjYXIvanMvanF1ZXJ5L2pxdWVyeS0xLjkuMS5taW4uanMiPjxcL3NjcmlwdD4nKTwvc2NyaXB0PgogICAgICAgIAogIAoKCiAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAKICAgIDwhLS0gVHdpdHRlciBCb290c3RyYXAgLS0+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIuLi9zdGF0aWMvb3NjYXIvanMvYm9vdHN0cmFwMy9ib290c3RyYXAubWluLmpzIj48L3NjcmlwdD4KICAgIDwhLS0gT3NjYXIgLS0+CiAgICA8c2NyaXB0IHNyYz0iLi4vc3RhdGljL29zY2FyL2pzL29zY2FyL3VpLmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGNoYXJzZXQ9InV0Zi04Ij48L3NjcmlwdD4KCiAgICA8c2NyaXB0IHNyYz0iLi4vc3RhdGljL29zY2FyL2pzL2Jvb3RzdHJhcC1kYXRldGltZXBpY2tlci9ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXIuanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgY2hhcnNldD0idXRmLTgiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Ii4uL3N0YXRpYy9vc2Nhci9qcy9ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXIvbG9jYWxlcy9ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXIuYWxsLmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGNoYXJzZXQ9InV0Zi04Ij48L3NjcmlwdD4KCgogICAgICAgIAogICAgICAgIAogICAgCgogICAgCgoKICAgICAgICAKICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICQoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAKICAgIAogICAgCiAgICBvc2Nhci5pbml0KCk7CgogICAgb3NjYXIuc2VhcmNoLmluaXQoKTsKCiAgICAgICAgICAgIH0pOwogICAgICAgIDwvc2NyaXB0PgoKICAgICAgICAKICAgICAgICA8IS0tIFZlcnNpb246IE4vQSAtLT4KICAgICAgICAKICAgIDwvYm9keT4KPC9odG1sPgo=
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:22 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-16.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:22 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:22 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-17.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:22 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:22 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-18.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:22 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:22 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-19.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:22 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:22 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-20.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:22 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:22 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-21.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:22 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:22 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-22.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:22 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:22 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-23.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:23 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:23 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-24.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:23 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:23 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-25.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:23 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:23 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-26.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:23 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:23 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-27.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:23 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:23 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-28.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:23 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:23 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-29.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:23 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:23 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-30.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:23 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:23 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-31.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:23 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        Cgo8IURPQ1RZUEUgaHRtbD4KPCEtLVtpZiBsdCBJRSA3XT4gICAgICA8aHRtbCBsYW5nPSJlbi11cyIgY2xhc3M9Im5vLWpzIGx0LWllOSBsdC1pZTggbHQtaWU3Ij4gPCFbZW5kaWZdLS0+CjwhLS1baWYgSUUgN10+ICAgICAgICAgPGh0bWwgbGFuZz0iZW4tdXMiIGNsYXNzPSJuby1qcyBsdC1pZTkgbHQtaWU4Ij4gPCFbZW5kaWZdLS0+CjwhLS1baWYgSUUgOF0+ICAgICAgICAgPGh0bWwgbGFuZz0iZW4tdXMiIGNsYXNzPSJuby1qcyBsdC1pZTkiPiA8IVtlbmRpZl0tLT4KPCEtLVtpZiBndCBJRSA4XT48IS0tPiA8aHRtbCBsYW5nPSJlbi11cyIgY2xhc3M9Im5vLWpzIj4gPCEtLTwhW2VuZGlmXS0tPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPgogICAgQWxsIHByb2R1Y3RzIHwgQm9va3MgdG8gU2NyYXBlIC0gU2FuZGJveAo8L3RpdGxlPgoKICAgICAgICA8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYtOCIgLz4KICAgICAgICA8bWV0YSBuYW1lPSJjcmVhdGVkIiBjb250ZW50PSIyNHRoIEp1biAyMDE2IDA5OjMyIiAvPgogICAgICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSIiIC8+CiAgICAgICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCIgLz4KICAgICAgICA8bWV0YSBuYW1lPSJyb2JvdHMiIGNvbnRlbnQ9Ik5PQVJDSElWRSxOT0NBQ0hFIiAvPgoKICAgICAgICA8IS0tIExlIEhUTUw1IHNoaW0sIGZvciBJRTYtOCBzdXBwb3J0IG9mIEhUTUwgZWxlbWVudHMgLS0+CiAgICAgICAgPCEtLVtpZiBsdCBJRSA5XT4KICAgICAgICA8c2NyaXB0IHNyYz0iLy9odG1sNXNoaW0uZ29vZ2xlY29kZS5jb20vc3ZuL3RydW5rL2h0bWw1LmpzIj48L3NjcmlwdD4KICAgICAgICA8IVtlbmRpZl0tLT4KCiAgICAgICAgCiAgICAgICAgICAgIDxsaW5rIHJlbD0ic2hvcnRjdXQgaWNvbiIgaHJlZj0iLi4vc3RhdGljL29zY2FyL2Zhdmljb24uaWNvIiAvPgogICAgICAgIAoKICAgICAgICAKICAgICAgICAKICAgIAogICAgCiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iLi4vc3RhdGljL29zY2FyL2Nzcy9zdHlsZXMuY3NzIiAvPgogICAgCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii4uL3N0YXRpYy9vc2Nhci9qcy9ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXIvYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLmNzcyIgLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii4uL3N0YXRpYy9vc2Nhci9jc3MvZGF0ZXRpbWVwaWNrZXIuY3NzIiAvPgoKCiAgICAgICAgCiAgICAgICAgCgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIAoKICAgICAgICAKICAgIDwvaGVhZD4KCiAgICA8Ym9keSBpZD0iZGVmYXVsdCIgY2xhc3M9ImRlZmF1bHQiPgogICAgICAgIAogICAgICAgIAogICAgCiAgICAKICAgIDxoZWFkZXIgY2xhc3M9ImhlYWRlciBjb250YWluZXItZmx1aWQiPgogICAgICAgIDxkaXYgY2xhc3M9InBhZ2VfaW5uZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTggaDEiPjxhIGhyZWY9Ii4uL2luZGV4Lmh0bWwiPkJvb2tzIHRvIFNjcmFwZTwvYT48c21hbGw+IFdlIGxvdmUgYmVpbmcgc2NyYXBlZCE8L3NtYWxsPgo8L2Rpdj4KCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2hlYWRlcj4KCiAgICAKICAgIAo8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQgcGFnZSI+CiAgICA8ZGl2IGNsYXNzPSJwYWdlX2lubmVyIj4KICAgICAgICAKICAgIDx1bCBjbGFzcz0iYnJlYWRjcnVtYiI+CiAgICAgICAgPGxpPgogICAgICAgICAgICA8YSBocmVmPSIuLi9pbmRleC5odG1sIj5Ib21lPC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJhY3RpdmUiPkFsbCBwcm9kdWN0czwvbGk+CiAgICA8L3VsPgoKICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgoKICAgICAgICAgICAgPGFzaWRlIGNsYXNzPSJzaWRlYmFyIGNvbC1zbS00IGNvbC1tZC0zIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBpZD0icHJvbW90aW9uc19sZWZ0Ij4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAKICAgIAogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9InNpZGVfY2F0ZWdvcmllcyI+CiAgICAgICAgICAgIDx1bCBjbGFzcz0ibmF2IG5hdi1saXN0Ij4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3NfMS9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEJvb2tzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvdHJhdmVsXzIvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUcmF2ZWwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvbXlzdGVyeV8zL2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTXlzdGVyeQogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9oaXN0b3JpY2FsLWZpY3Rpb25fNC9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhpc3RvcmljYWwgRmljdGlvbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9zZXF1ZW50aWFsLWFydF81L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2VxdWVudGlhbCBBcnQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvY2xhc3NpY3NfNi9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENsYXNzaWNzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL3BoaWxvc29waHlfNy9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBoaWxvc29waHkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3Mvcm9tYW5jZV84L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUm9tYW5jZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy93b21lbnMtZmljdGlvbl85L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgV29tZW5zIEZpY3Rpb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvZmljdGlvbl8xMC9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZpY3Rpb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvY2hpbGRyZW5zXzExL2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2hpbGRyZW5zCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL3JlbGlnaW9uXzEyL2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVsaWdpb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3Mvbm9uZmljdGlvbl8xMy9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5vbmZpY3Rpb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvbXVzaWNfMTQvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNdXNpYwogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9kZWZhdWx0XzE1L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRGVmYXVsdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9zY2llbmNlLWZpY3Rpb25fMTYvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTY2llbmNlIEZpY3Rpb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3Mvc3BvcnRzLWFuZC1nYW1lc18xNy9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNwb3J0cyBhbmQgR2FtZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvYWRkLWEtY29tbWVudF8xOC9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFkZCBhIGNvbW1lbnQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvZmFudGFzeV8xOS9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZhbnRhc3kKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvbmV3LWFkdWx0XzIwL2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmV3IEFkdWx0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL3lvdW5nLWFkdWx0XzIxL2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWW91bmcgQWR1bHQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3Mvc2NpZW5jZV8yMi9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNjaWVuY2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvcG9ldHJ5XzIzL2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUG9ldHJ5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL3BhcmFub3JtYWxfMjQvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQYXJhbm9ybWFsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL2FydF8yNS9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFydAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9wc3ljaG9sb2d5XzI2L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUHN5Y2hvbG9neQogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9hdXRvYmlvZ3JhcGh5XzI3L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQXV0b2Jpb2dyYXBoeQogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9wYXJlbnRpbmdfMjgvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQYXJlbnRpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvYWR1bHQtZmljdGlvbl8yOS9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFkdWx0IEZpY3Rpb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvaHVtb3JfMzAvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIdW1vcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9ob3Jyb3JfMzEvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIb3Jyb3IKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvaGlzdG9yeV8zMi9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhpc3RvcnkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvZm9vZC1hbmQtZHJpbmtfMzMvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGb29kIGFuZCBEcmluawogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9jaHJpc3RpYW4tZmljdGlvbl8zNC9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENocmlzdGlhbiBGaWN0aW9uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL2J1c2luZXNzXzM1L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQnVzaW5lc3MKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvYmlvZ3JhcGh5XzM2L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQmlvZ3JhcGh5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL3RocmlsbGVyXzM3L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhyaWxsZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvY29udGVtcG9yYXJ5XzM4L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29udGVtcG9yYXJ5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL3NwaXJpdHVhbGl0eV8zOS9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNwaXJpdHVhbGl0eQogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9hY2FkZW1pY180MC9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFjYWRlbWljCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL3NlbGYtaGVscF80MS9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlbGYgSGVscAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9oaXN0b3JpY2FsXzQyL2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSGlzdG9yaWNhbAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9jaHJpc3RpYW5fNDMvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDaHJpc3RpYW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3Mvc3VzcGVuc2VfNDQvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdXNwZW5zZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9zaG9ydC1zdG9yaWVzXzQ1L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2hvcnQgU3RvcmllcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9ub3ZlbHNfNDYvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3ZlbHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvaGVhbHRoXzQ3L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSGVhbHRoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhdGVnb3J5L2Jvb2tzL3BvbGl0aWNzXzQ4L2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUG9saXRpY3MKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2F0ZWdvcnkvYm9va3MvY3VsdHVyYWxfNDkvaW5kZXguaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDdWx0dXJhbAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9lcm90aWNhXzUwL2luZGV4Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXJvdGljYQogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJjYXRlZ29yeS9ib29rcy9jcmltZV81MS9pbmRleC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENyaW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICAKICAgIAoKICAgICAgICAgICAgPC9hc2lkZT4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS04IGNvbC1tZC05Ij4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFnZS1oZWFkZXIgYWN0aW9uIj4KICAgICAgICAgICAgICAgICAgICA8aDE+QWxsIHByb2R1Y3RzPC9oMT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgCgoKCjxkaXYgaWQ9Im1lc3NhZ2VzIj4KCjwvZGl2PgoKCiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwcm9tb3Rpb25zIj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIAogICAgPGZvcm0gbWV0aG9kPSJnZXQiIGNsYXNzPSJmb3JtLWhvcml6b250YWwiPgogICAgICAgIAogICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6bm9uZSI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICA8L2Rpdj4KCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz4xMDAwPC9zdHJvbmc+IHJlc3VsdHMgLSBzaG93aW5nIDxzdHJvbmc+NjAxPC9zdHJvbmc+IHRvIDxzdHJvbmc+NjIwPC9zdHJvbmc+LgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAKICAgIDwvZm9ybT4KICAgIAogICAgICAgIDxzZWN0aW9uPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhbGVydCBhbGVydC13YXJuaW5nIiByb2xlPSJhbGVydCI+PHN0cm9uZz5XYXJuaW5nITwvc3Ryb25nPiBUaGlzIGlzIGEgZGVtbyB3ZWJzaXRlIGZvciB3ZWIgc2NyYXBpbmcgcHVycG9zZXMuIFByaWNlcyBhbmQgcmF0aW5ncyBoZXJlIHdlcmUgcmFuZG9tbHkgYXNzaWduZWQgYW5kIGhhdmUgbm8gcmVhbCBtZWFuaW5nLjwvZGl2PgoKICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxvbCBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJjb2wteHMtNiBjb2wtc20tNCBjb2wtbWQtMyBjb2wtbGctMyI+CgoKCgoKCiAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZHVjdF9wb2QiPgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZV9jb250YWluZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0idGhlLWRyZWFtLXRoaWV2ZXMtdGhlLXJhdmVuLWN5Y2xlLTJfNDAwL2luZGV4Lmh0bWwiPjxpbWcgc3JjPSIuLi9tZWRpYS9jYWNoZS9kOS83YS9kOTdhM2E0YTY1YjUyNzVhYjUwNmIyOGM3YTg4ZTBhNS5qcGciIGFsdD0iVGhlIERyZWFtIFRoaWV2ZXMgKFRoZSBSYXZlbiBDeWNsZSAjMikiIGNsYXNzPSJ0aHVtYm5haWwiPjwvYT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHAgY2xhc3M9InN0YXItcmF0aW5nIE9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgCiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8aDM+PGEgaHJlZj0idGhlLWRyZWFtLXRoaWV2ZXMtdGhlLXJhdmVuLWN5Y2xlLTJfNDAwL2luZGV4Lmh0bWwiIHRpdGxlPSJUaGUgRHJlYW0gVGhpZXZlcyAoVGhlIFJhdmVuIEN5Y2xlICMyKSI+VGhlIERyZWFtIFRoaWV2ZXMgKFRoZSAuLi48L2E+PC9oMz4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3RfcHJpY2UiPgogICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgICAgICA8cCBjbGFzcz0icHJpY2VfY29sb3IiPsKjMzQuNTA8L3A+CiAgICAKCjxwIGNsYXNzPSJpbnN0b2NrIGF2YWlsYWJpbGl0eSI+CiAgICA8aSBjbGFzcz0iaWNvbi1vayI+PC9pPgogICAgCiAgICAgICAgSW4gc3RvY2sKICAgIAo8L3A+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgIDxmb3JtPgogICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayIgZGF0YS1sb2FkaW5nLXRleHQ9IkFkZGluZy4uLiI+QWRkIHRvIGJhc2tldDwvYnV0dG9uPgogICAgPC9mb3JtPgoKCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L2FydGljbGU+Cgo8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImNvbC14cy02IGNvbC1zbS00IGNvbC1tZC0zIGNvbC1sZy0zIj4KCgoKCgoKICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9kdWN0X3BvZCI+CiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImltYWdlX2NvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJ0aGUtZGFya2VzdC1jb3JuZXJzXzM5OS9pbmRleC5odG1sIj48aW1nIHNyYz0iLi4vbWVkaWEvY2FjaGUvYzEvYWIvYzFhYjczYTIwZDAyYjVmM2E1NTk5ZTdjNTcwNGE5MDkuanBnIiBhbHQ9IlRoZSBEYXJrZXN0IENvcm5lcnMiIGNsYXNzPSJ0aHVtYm5haWwiPjwvYT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHAgY2xhc3M9InN0YXItcmF0aW5nIEZpdmUiPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIAogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGgzPjxhIGhyZWY9InRoZS1kYXJrZXN0LWNvcm5lcnNfMzk5L2luZGV4Lmh0bWwiIHRpdGxlPSJUaGUgRGFya2VzdCBDb3JuZXJzIj5UaGUgRGFya2VzdCBDb3JuZXJzPC9hPjwvaDM+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0X3ByaWNlIj4KICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICAgICAgPHAgY2xhc3M9InByaWNlX2NvbG9yIj7CozExLjMzPC9wPgogICAgCgo8cCBjbGFzcz0iaW5zdG9jayBhdmFpbGFiaWxpdHkiPgogICAgPGkgY2xhc3M9Imljb24tb2siPjwvaT4KICAgIAogICAgICAgIEluIHN0b2NrCiAgICAKPC9wPgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICA8Zm9ybT4KICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBidG4tYmxvY2siIGRhdGEtbG9hZGluZy10ZXh0PSJBZGRpbmcuLi4iPkFkZCB0byBiYXNrZXQ8L2J1dHRvbj4KICAgIDwvZm9ybT4KCgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgPC9hcnRpY2xlPgoKPC9saT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJjb2wteHMtNiBjb2wtc20tNCBjb2wtbWQtMyBjb2wtbGctMyI+CgoKCgoKCiAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZHVjdF9wb2QiPgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZV9jb250YWluZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0idGhlLWNyb3Nzb3Zlcl8zOTgvaW5kZXguaHRtbCI+PGltZyBzcmM9Ii4uL21lZGlhL2NhY2hlLzlmLzM1LzlmMzUxY2ExOTc4MTI4YzYwYTNiN2Y4NTk4NzA3NWIzLmpwZyIgYWx0PSJUaGUgQ3Jvc3NvdmVyIiBjbGFzcz0idGh1bWJuYWlsIj48L2E+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJzdGFyLXJhdGluZyBGb3VyIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAKICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxoMz48YSBocmVmPSJ0aGUtY3Jvc3NvdmVyXzM5OC9pbmRleC5odG1sIiB0aXRsZT0iVGhlIENyb3Nzb3ZlciI+VGhlIENyb3Nzb3ZlcjwvYT48L2gzPgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdF9wcmljZSI+CiAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgICAgIDxwIGNsYXNzPSJwcmljZV9jb2xvciI+wqMzOC43NzwvcD4KICAgIAoKPHAgY2xhc3M9Imluc3RvY2sgYXZhaWxhYmlsaXR5Ij4KICAgIDxpIGNsYXNzPSJpY29uLW9rIj48L2k+CiAgICAKICAgICAgICBJbiBzdG9jawogICAgCjwvcD4KCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgPGZvcm0+CiAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgYnRuLWJsb2NrIiBkYXRhLWxvYWRpbmctdGV4dD0iQWRkaW5nLi4uIj5BZGQgdG8gYmFza2V0PC9idXR0b24+CiAgICA8L2Zvcm0+CgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvYXJ0aWNsZT4KCjwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY29sLXhzLTYgY29sLXNtLTQgY29sLW1kLTMgY29sLWxnLTMiPgoKCgoKCgogICAgPGFydGljbGUgY2xhc3M9InByb2R1Y3RfcG9kIj4KICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2VfY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InRoZS01dGgtd2F2ZS10aGUtNXRoLXdhdmUtMV8zOTcvaW5kZXguaHRtbCI+PGltZyBzcmM9Ii4uL21lZGlhL2NhY2hlLzEwL2QwLzEwZDBjNWU0N2QwZThjY2UxNmI2YjVlNmJlNDhjYjE2LmpwZyIgYWx0PSJUaGUgNXRoIFdhdmUgKFRoZSA1dGggV2F2ZSAjMSkiIGNsYXNzPSJ0aHVtYm5haWwiPjwvYT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHAgY2xhc3M9InN0YXItcmF0aW5nIFR3byI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgCiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8aDM+PGEgaHJlZj0idGhlLTV0aC13YXZlLXRoZS01dGgtd2F2ZS0xXzM5Ny9pbmRleC5odG1sIiB0aXRsZT0iVGhlIDV0aCBXYXZlIChUaGUgNXRoIFdhdmUgIzEpIj5UaGUgNXRoIFdhdmUgKFRoZSAuLi48L2E+PC9oMz4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3RfcHJpY2UiPgogICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgICAgICA8cCBjbGFzcz0icHJpY2VfY29sb3IiPsKjMTEuODM8L3A+CiAgICAKCjxwIGNsYXNzPSJpbnN0b2NrIGF2YWlsYWJpbGl0eSI+CiAgICA8aSBjbGFzcz0iaWNvbi1vayI+PC9pPgogICAgCiAgICAgICAgSW4gc3RvY2sKICAgIAo8L3A+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgIDxmb3JtPgogICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayIgZGF0YS1sb2FkaW5nLXRleHQ9IkFkZGluZy4uLiI+QWRkIHRvIGJhc2tldDwvYnV0dG9uPgogICAgPC9mb3JtPgoKCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L2FydGljbGU+Cgo8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImNvbC14cy02IGNvbC1zbS00IGNvbC1tZC0zIGNvbC1sZy0zIj4KCgoKCgoKICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9kdWN0X3BvZCI+CiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImltYWdlX2NvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJ0ZWxsLXRoZS13aW5kLWFuZC1maXJlXzM5Ni9pbmRleC5odG1sIj48aW1nIHNyYz0iLi4vbWVkaWEvY2FjaGUvM2IvMGMvM2IwYzVmNGRmMjZiNzM2NTlhZjRlMjUxMDc0OTkzODQuanBnIiBhbHQ9IlRlbGwgdGhlIFdpbmQgYW5kIEZpcmUiIGNsYXNzPSJ0aHVtYm5haWwiPjwvYT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHAgY2xhc3M9InN0YXItcmF0aW5nIFRocmVlIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAKICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxoMz48YSBocmVmPSJ0ZWxsLXRoZS13aW5kLWFuZC1maXJlXzM5Ni9pbmRleC5odG1sIiB0aXRsZT0iVGVsbCB0aGUgV2luZCBhbmQgRmlyZSI+VGVsbCB0aGUgV2luZCBhbmQgLi4uPC9hPjwvaDM+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0X3ByaWNlIj4KICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICAgICAgPHAgY2xhc3M9InByaWNlX2NvbG9yIj7CozQ1LjUxPC9wPgogICAgCgo8cCBjbGFzcz0iaW5zdG9jayBhdmFpbGFiaWxpdHkiPgogICAgPGkgY2xhc3M9Imljb24tb2siPjwvaT4KICAgIAogICAgICAgIEluIHN0b2NrCiAgICAKPC9wPgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICA8Zm9ybT4KICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBidG4tYmxvY2siIGRhdGEtbG9hZGluZy10ZXh0PSJBZGRpbmcuLi4iPkFkZCB0byBiYXNrZXQ8L2J1dHRvbj4KICAgIDwvZm9ybT4KCgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgPC9hcnRpY2xlPgoKPC9saT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJjb2wteHMtNiBjb2wtc20tNCBjb2wtbWQtMyBjb2wtbGctMyI+CgoKCgoKCiAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZHVjdF9wb2QiPgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZV9jb250YWluZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0idGVsbC1tZS10aHJlZS10aGluZ3NfMzk1L2luZGV4Lmh0bWwiPjxpbWcgc3JjPSIuLi9tZWRpYS9jYWNoZS9hMS8yZi9hMTJmMGJlYzhjODcyODgwMGY5MDFiNGU1ZjZlM2Y5YS5qcGciIGFsdD0iVGVsbCBNZSBUaHJlZSBUaGluZ3MiIGNsYXNzPSJ0aHVtYm5haWwiPjwvYT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHAgY2xhc3M9InN0YXItcmF0aW5nIE9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgCiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8aDM+PGEgaHJlZj0idGVsbC1tZS10aHJlZS10aGluZ3NfMzk1L2luZGV4Lmh0bWwiIHRpdGxlPSJUZWxsIE1lIFRocmVlIFRoaW5ncyI+VGVsbCBNZSBUaHJlZSBUaGluZ3M8L2E+PC9oMz4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3RfcHJpY2UiPgogICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgICAgICA8cCBjbGFzcz0icHJpY2VfY29sb3IiPsKjNDEuODE8L3A+CiAgICAKCjxwIGNsYXNzPSJpbnN0b2NrIGF2YWlsYWJpbGl0eSI+CiAgICA8aSBjbGFzcz0iaWNvbi1vayI+PC9pPgogICAgCiAgICAgICAgSW4gc3RvY2sKICAgIAo8L3A+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgIDxmb3JtPgogICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayIgZGF0YS1sb2FkaW5nLXRleHQ9IkFkZGluZy4uLiI+QWRkIHRvIGJhc2tldDwvYnV0dG9uPgogICAgPC9mb3JtPgoKCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L2FydGljbGU+Cgo8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImNvbC14cy02IGNvbC1zbS00IGNvbC1tZC0zIGNvbC1sZy0zIj4KCgoKCgoKICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9kdWN0X3BvZCI+CiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImltYWdlX2NvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJ0YWxraW5nLXRvLWdpcmxzLWFib3V0LWR1cmFuLWR1cmFuLW9uZS15b3VuZy1tYW5zLXF1ZXN0LWZvci10cnVlLWxvdmUtYW5kLWEtY29vbGVyLWhhaXJjdXRfMzk0L2luZGV4Lmh0bWwiPjxpbWcgc3JjPSIuLi9tZWRpYS9jYWNoZS8wNy84Yi8wNzhiOTM0NjEzYWY0NzNkYWY3ZWNmOTE4ZTA1ZDA1MC5qcGciIGFsdD0iVGFsa2luZyB0byBHaXJscyBBYm91dCBEdXJhbiBEdXJhbjogT25lIFlvdW5nIE1hbiYjMzk7cyBRdWVzdCBmb3IgVHJ1ZSBMb3ZlIGFuZCBhIENvb2xlciBIYWlyY3V0IiBjbGFzcz0idGh1bWJuYWlsIj48L2E+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJzdGFyLXJhdGluZyBGb3VyIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAKICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxoMz48YSBocmVmPSJ0YWxraW5nLXRvLWdpcmxzLWFib3V0LWR1cmFuLWR1cmFuLW9uZS15b3VuZy1tYW5zLXF1ZXN0LWZvci10cnVlLWxvdmUtYW5kLWEtY29vbGVyLWhhaXJjdXRfMzk0L2luZGV4Lmh0bWwiIHRpdGxlPSJUYWxraW5nIHRvIEdpcmxzIEFib3V0IER1cmFuIER1cmFuOiBPbmUgWW91bmcgTWFuJiMzOTtzIFF1ZXN0IGZvciBUcnVlIExvdmUgYW5kIGEgQ29vbGVyIEhhaXJjdXQiPlRhbGtpbmcgdG8gR2lybHMgQWJvdXQgLi4uPC9hPjwvaDM+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0X3ByaWNlIj4KICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICAgICAgPHAgY2xhc3M9InByaWNlX2NvbG9yIj7CozI1LjE1PC9wPgogICAgCgo8cCBjbGFzcz0iaW5zdG9jayBhdmFpbGFiaWxpdHkiPgogICAgPGkgY2xhc3M9Imljb24tb2siPjwvaT4KICAgIAogICAgICAgIEluIHN0b2NrCiAgICAKPC9wPgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICA8Zm9ybT4KICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBidG4tYmxvY2siIGRhdGEtbG9hZGluZy10ZXh0PSJBZGRpbmcuLi4iPkFkZCB0byBiYXNrZXQ8L2J1dHRvbj4KICAgIDwvZm9ybT4KCgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgPC9hcnRpY2xlPgoKPC9saT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJjb2wteHMtNiBjb2wtc20tNCBjb2wtbWQtMyBjb2wtbGctMyI+CgoKCgoKCiAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZHVjdF9wb2QiPgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZV9jb250YWluZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0ic2lkZGhhcnRoYV8zOTMvaW5kZXguaHRtbCI+PGltZyBzcmM9Ii4uL21lZGlhL2NhY2hlL2NlLzBiL2NlMGJlMmQ4NmUzODg1NDAxMjJjMjIyMzA2YzZkNjJjLmpwZyIgYWx0PSJTaWRkaGFydGhhIiBjbGFzcz0idGh1bWJuYWlsIj48L2E+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJzdGFyLXJhdGluZyBGaXZlIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAKICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxoMz48YSBocmVmPSJzaWRkaGFydGhhXzM5My9pbmRleC5odG1sIiB0aXRsZT0iU2lkZGhhcnRoYSI+U2lkZGhhcnRoYTwvYT48L2gzPgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdF9wcmljZSI+CiAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgICAgIDxwIGNsYXNzPSJwcmljZV9jb2xvciI+wqMzNC4yMjwvcD4KICAgIAoKPHAgY2xhc3M9Imluc3RvY2sgYXZhaWxhYmlsaXR5Ij4KICAgIDxpIGNsYXNzPSJpY29uLW9rIj48L2k+CiAgICAKICAgICAgICBJbiBzdG9jawogICAgCjwvcD4KCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgPGZvcm0+CiAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgYnRuLWJsb2NrIiBkYXRhLWxvYWRpbmctdGV4dD0iQWRkaW5nLi4uIj5BZGQgdG8gYmFza2V0PC9idXR0b24+CiAgICA8L2Zvcm0+CgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvYXJ0aWNsZT4KCjwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY29sLXhzLTYgY29sLXNtLTQgY29sLW1kLTMgY29sLWxnLTMiPgoKCgoKCgogICAgPGFydGljbGUgY2xhc3M9InByb2R1Y3RfcG9kIj4KICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2VfY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InNoaXZlci10aGUtd29sdmVzLW9mLW1lcmN5LWZhbGxzLTFfMzkyL2luZGV4Lmh0bWwiPjxpbWcgc3JjPSIuLi9tZWRpYS9jYWNoZS84NC83My84NDczOTk2NTFkOGYyZGZhZTFhMGQ1YTBlYTQwNjRiMi5qcGciIGFsdD0iU2hpdmVyIChUaGUgV29sdmVzIG9mIE1lcmN5IEZhbGxzICMxKSIgY2xhc3M9InRodW1ibmFpbCI+PC9hPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8cCBjbGFzcz0ic3Rhci1yYXRpbmcgRml2ZSI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgCiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8aDM+PGEgaHJlZj0ic2hpdmVyLXRoZS13b2x2ZXMtb2YtbWVyY3ktZmFsbHMtMV8zOTIvaW5kZXguaHRtbCIgdGl0bGU9IlNoaXZlciAoVGhlIFdvbHZlcyBvZiBNZXJjeSBGYWxscyAjMSkiPlNoaXZlciAoVGhlIFdvbHZlcyBvZiAuLi48L2E+PC9oMz4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3RfcHJpY2UiPgogICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgICAgICA8cCBjbGFzcz0icHJpY2VfY29sb3IiPsKjMTYuMjM8L3A+CiAgICAKCjxwIGNsYXNzPSJpbnN0b2NrIGF2YWlsYWJpbGl0eSI+CiAgICA8aSBjbGFzcz0iaWNvbi1vayI+PC9pPgogICAgCiAgICAgICAgSW4gc3RvY2sKICAgIAo8L3A+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgIDxmb3JtPgogICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayIgZGF0YS1sb2FkaW5nLXRleHQ9IkFkZGluZy4uLiI+QWRkIHRvIGJhc2tldDwvYnV0dG9uPgogICAgPC9mb3JtPgoKCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L2FydGljbGU+Cgo8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImNvbC14cy02IGNvbC1zbS00IGNvbC1tZC0zIGNvbC1sZy0zIj4KCgoKCgoKICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9kdWN0X3BvZCI+CiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImltYWdlX2NvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJyZW1lbWJlci1tZV8zOTEvaW5kZXguaHRtbCI+PGltZyBzcmM9Ii4uL21lZGlhL2NhY2hlLzNmLzk1LzNmOTU3MmY5NDg1ODE5N2U5Mjc4NmIxOTRmMGYxMmRmLmpwZyIgYWx0PSJSZW1lbWJlciBNZT8iIGNsYXNzPSJ0aHVtYm5haWwiPjwvYT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHAgY2xhc3M9InN0YXItcmF0aW5nIFRocmVlIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAKICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxoMz48YSBocmVmPSJyZW1lbWJlci1tZV8zOTEvaW5kZXguaHRtbCIgdGl0bGU9IlJlbWVtYmVyIE1lPyI+UmVtZW1iZXIgTWU/PC9hPjwvaDM+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0X3ByaWNlIj4KICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICAgICAgPHAgY2xhc3M9InByaWNlX2NvbG9yIj7CozExLjQ4PC9wPgogICAgCgo8cCBjbGFzcz0iaW5zdG9jayBhdmFpbGFiaWxpdHkiPgogICAgPGkgY2xhc3M9Imljb24tb2siPjwvaT4KICAgIAogICAgICAgIEluIHN0b2NrCiAgICAKPC9wPgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICA8Zm9ybT4KICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBidG4tYmxvY2siIGRhdGEtbG9hZGluZy10ZXh0PSJBZGRpbmcuLi4iPkFkZCB0byBiYXNrZXQ8L2J1dHRvbj4KICAgIDwvZm9ybT4KCgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgPC9hcnRpY2xlPgoKPC9saT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJjb2wteHMtNiBjb2wtc20tNCBjb2wtbWQtMyBjb2wtbGctMyI+CgoKCgoKCiAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZHVjdF9wb2QiPgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZV9jb250YWluZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icmVkLWRyYWdvbi1oYW5uaWJhbC1sZWN0ZXItMV8zOTAvaW5kZXguaHRtbCI+PGltZyBzcmM9Ii4uL21lZGlhL2NhY2hlLzMwLzY2LzMwNjZmOGJjZDJlMmVkNmI0NTA4NDM1NWZmMDg0YTYxLmpwZyIgYWx0PSJSZWQgRHJhZ29uIChIYW5uaWJhbCBMZWN0ZXIgIzEpIiBjbGFzcz0idGh1bWJuYWlsIj48L2E+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJzdGFyLXJhdGluZyBUaHJlZSI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgCiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8aDM+PGEgaHJlZj0icmVkLWRyYWdvbi1oYW5uaWJhbC1sZWN0ZXItMV8zOTAvaW5kZXguaHRtbCIgdGl0bGU9IlJlZCBEcmFnb24gKEhhbm5pYmFsIExlY3RlciAjMSkiPlJlZCBEcmFnb24gKEhhbm5pYmFsIExlY3RlciAuLi48L2E+PC9oMz4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3RfcHJpY2UiPgogICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgICAgICA8cCBjbGFzcz0icHJpY2VfY29sb3IiPsKjMjMuMzc8L3A+CiAgICAKCjxwIGNsYXNzPSJpbnN0b2NrIGF2YWlsYWJpbGl0eSI+CiAgICA8aSBjbGFzcz0iaWNvbi1vayI+PC9pPgogICAgCiAgICAgICAgSW4gc3RvY2sKICAgIAo8L3A+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgIDxmb3JtPgogICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayIgZGF0YS1sb2FkaW5nLXRleHQ9IkFkZGluZy4uLiI+QWRkIHRvIGJhc2tldDwvYnV0dG9uPgogICAgPC9mb3JtPgoKCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L2FydGljbGU+Cgo8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImNvbC14cy02IGNvbC1zbS00IGNvbC1tZC0zIGNvbC1sZy0zIj4KCgoKCgoKICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9kdWN0X3BvZCI+CiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImltYWdlX2NvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwZWFrLXNlY3JldHMtZnJvbS10aGUtbmV3LXNjaWVuY2Utb2YtZXhwZXJ0aXNlXzM4OS9pbmRleC5odG1sIj48aW1nIHNyYz0iLi4vbWVkaWEvY2FjaGUvODMvYWIvODNhYjY1ZjkzOGIyNGZhMWE5Y2I0NzIzNWJlNDliNTcuanBnIiBhbHQ9IlBlYWs6IFNlY3JldHMgZnJvbSB0aGUgTmV3IFNjaWVuY2Ugb2YgRXhwZXJ0aXNlIiBjbGFzcz0idGh1bWJuYWlsIj48L2E+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJzdGFyLXJhdGluZyBUd28iPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIAogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGgzPjxhIGhyZWY9InBlYWstc2VjcmV0cy1mcm9tLXRoZS1uZXctc2NpZW5jZS1vZi1leHBlcnRpc2VfMzg5L2luZGV4Lmh0bWwiIHRpdGxlPSJQZWFrOiBTZWNyZXRzIGZyb20gdGhlIE5ldyBTY2llbmNlIG9mIEV4cGVydGlzZSI+UGVhazogU2VjcmV0cyBmcm9tIHRoZSAuLi48L2E+PC9oMz4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3RfcHJpY2UiPgogICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgICAgICA8cCBjbGFzcz0icHJpY2VfY29sb3IiPsKjMTYuMjg8L3A+CiAgICAKCjxwIGNsYXNzPSJpbnN0b2NrIGF2YWlsYWJpbGl0eSI+CiAgICA8aSBjbGFzcz0iaWNvbi1vayI+PC9pPgogICAgCiAgICAgICAgSW4gc3RvY2sKICAgIAo8L3A+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgIDxmb3JtPgogICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayIgZGF0YS1sb2FkaW5nLXRleHQ9IkFkZGluZy4uLiI+QWRkIHRvIGJhc2tldDwvYnV0dG9uPgogICAgPC9mb3JtPgoKCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L2FydGljbGU+Cgo8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImNvbC14cy02IGNvbC1zbS00IGNvbC1tZC0zIGNvbC1sZy0zIj4KCgoKCgoKICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9kdWN0X3BvZCI+CiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImltYWdlX2NvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJteS1tb3RoZXItd2FzLW51dHNfMzg4L2luZGV4Lmh0bWwiPjxpbWcgc3JjPSIuLi9tZWRpYS9jYWNoZS85Yi9iNC85YmI0MmJmODMzZTkxMTkzY2EwNWJhZGRkZGVkNGJmYi5qcGciIGFsdD0iTXkgTW90aGVyIFdhcyBOdXRzIiBjbGFzcz0idGh1bWJuYWlsIj48L2E+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJzdGFyLXJhdGluZyBGb3VyIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAKICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxoMz48YSBocmVmPSJteS1tb3RoZXItd2FzLW51dHNfMzg4L2luZGV4Lmh0bWwiIHRpdGxlPSJNeSBNb3RoZXIgV2FzIE51dHMiPk15IE1vdGhlciBXYXMgTnV0czwvYT48L2gzPgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdF9wcmljZSI+CiAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgICAgIDxwIGNsYXNzPSJwcmljZV9jb2xvciI+wqMzMS42MzwvcD4KICAgIAoKPHAgY2xhc3M9Imluc3RvY2sgYXZhaWxhYmlsaXR5Ij4KICAgIDxpIGNsYXNzPSJpY29uLW9rIj48L2k+CiAgICAKICAgICAgICBJbiBzdG9jawogICAgCjwvcD4KCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgPGZvcm0+CiAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgYnRuLWJsb2NrIiBkYXRhLWxvYWRpbmctdGV4dD0iQWRkaW5nLi4uIj5BZGQgdG8gYmFza2V0PC9idXR0b24+CiAgICA8L2Zvcm0+CgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvYXJ0aWNsZT4KCjwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY29sLXhzLTYgY29sLXNtLTQgY29sLW1kLTMgY29sLWxnLTMiPgoKCgoKCgogICAgPGFydGljbGUgY2xhc3M9InByb2R1Y3RfcG9kIj4KICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2VfY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Im1leGljYW4tdG9kYXktbmV3LWFuZC1yZWRpc2NvdmVyZWQtcmVjaXBlcy1mb3ItY29udGVtcG9yYXJ5LWtpdGNoZW5zXzM4Ny9pbmRleC5odG1sIj48aW1nIHNyYz0iLi4vbWVkaWEvY2FjaGUvNWQvMDIvNWQwMjliZmYyOTljZGI3NzdlMDZmMzU4MDBmYWE2MjguanBnIiBhbHQ9Ik1leGljYW4gVG9kYXk6IE5ldyBhbmQgUmVkaXNjb3ZlcmVkIFJlY2lwZXMgZm9yIENvbnRlbXBvcmFyeSBLaXRjaGVucyIgY2xhc3M9InRodW1ibmFpbCI+PC9hPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8cCBjbGFzcz0ic3Rhci1yYXRpbmcgRml2ZSI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgCiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8aDM+PGEgaHJlZj0ibWV4aWNhbi10b2RheS1uZXctYW5kLXJlZGlzY292ZXJlZC1yZWNpcGVzLWZvci1jb250ZW1wb3Jhcnkta2l0Y2hlbnNfMzg3L2luZGV4Lmh0bWwiIHRpdGxlPSJNZXhpY2FuIFRvZGF5OiBOZXcgYW5kIFJlZGlzY292ZXJlZCBSZWNpcGVzIGZvciBDb250ZW1wb3JhcnkgS2l0Y2hlbnMiPk1leGljYW4gVG9kYXk6IE5ldyBhbmQgLi4uPC9hPjwvaDM+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0X3ByaWNlIj4KICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICAgICAgPHAgY2xhc3M9InByaWNlX2NvbG9yIj7CozI0LjkxPC9wPgogICAgCgo8cCBjbGFzcz0iaW5zdG9jayBhdmFpbGFiaWxpdHkiPgogICAgPGkgY2xhc3M9Imljb24tb2siPjwvaT4KICAgIAogICAgICAgIEluIHN0b2NrCiAgICAKPC9wPgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICA8Zm9ybT4KICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBidG4tYmxvY2siIGRhdGEtbG9hZGluZy10ZXh0PSJBZGRpbmcuLi4iPkFkZCB0byBiYXNrZXQ8L2J1dHRvbj4KICAgIDwvZm9ybT4KCgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgPC9hcnRpY2xlPgoKPC9saT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJjb2wteHMtNiBjb2wtc20tNCBjb2wtbWQtMyBjb2wtbGctMyI+CgoKCgoKCiAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZHVjdF9wb2QiPgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZV9jb250YWluZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0ibWF5YmUtc29tZXRoaW5nLWJlYXV0aWZ1bC1ob3ctYXJ0LXRyYW5zZm9ybWVkLWEtbmVpZ2hib3Job29kXzM4Ni9pbmRleC5odG1sIj48aW1nIHNyYz0iLi4vbWVkaWEvY2FjaGUvYzAvYmIvYzBiYjZlNDI3NDNiOWMxYWFmOWI3NTQ1MDExMDBhNWQuanBnIiBhbHQ9Ik1heWJlIFNvbWV0aGluZyBCZWF1dGlmdWw6IEhvdyBBcnQgVHJhbnNmb3JtZWQgYSBOZWlnaGJvcmhvb2QiIGNsYXNzPSJ0aHVtYm5haWwiPjwvYT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHAgY2xhc3M9InN0YXItcmF0aW5nIE9uZSI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgCiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8aDM+PGEgaHJlZj0ibWF5YmUtc29tZXRoaW5nLWJlYXV0aWZ1bC1ob3ctYXJ0LXRyYW5zZm9ybWVkLWEtbmVpZ2hib3Job29kXzM4Ni9pbmRleC5odG1sIiB0aXRsZT0iTWF5YmUgU29tZXRoaW5nIEJlYXV0aWZ1bDogSG93IEFydCBUcmFuc2Zvcm1lZCBhIE5laWdoYm9yaG9vZCI+TWF5YmUgU29tZXRoaW5nIEJlYXV0aWZ1bDogSG93IC4uLjwvYT48L2gzPgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdF9wcmljZSI+CiAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgICAgIDxwIGNsYXNzPSJwcmljZV9jb2xvciI+wqMyMi41NDwvcD4KICAgIAoKPHAgY2xhc3M9Imluc3RvY2sgYXZhaWxhYmlsaXR5Ij4KICAgIDxpIGNsYXNzPSJpY29uLW9rIj48L2k+CiAgICAKICAgICAgICBJbiBzdG9jawogICAgCjwvcD4KCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgPGZvcm0+CiAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgYnRuLWJsb2NrIiBkYXRhLWxvYWRpbmctdGV4dD0iQWRkaW5nLi4uIj5BZGQgdG8gYmFza2V0PC9idXR0b24+CiAgICA8L2Zvcm0+CgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvYXJ0aWNsZT4KCjwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY29sLXhzLTYgY29sLXNtLTQgY29sLW1kLTMgY29sLWxnLTMiPgoKCgoKCgogICAgPGFydGljbGUgY2xhc3M9InByb2R1Y3RfcG9kIj4KICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2VfY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImxvbGEtYW5kLXRoZS1ib3ktbmV4dC1kb29yLWFubmEtYW5kLXRoZS1mcmVuY2gta2lzcy0yXzM4NS9pbmRleC5odG1sIj48aW1nIHNyYz0iLi4vbWVkaWEvY2FjaGUvYmMvYzgvYmNjODM3NGUwYzgxZGVkMTQ4NmI2MjI1Y2E0ZmU3OGEuanBnIiBhbHQ9IkxvbGEgYW5kIHRoZSBCb3kgTmV4dCBEb29yIChBbm5hIGFuZCB0aGUgRnJlbmNoIEtpc3MgIzIpIiBjbGFzcz0idGh1bWJuYWlsIj48L2E+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJzdGFyLXJhdGluZyBGb3VyIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAKICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxoMz48YSBocmVmPSJsb2xhLWFuZC10aGUtYm95LW5leHQtZG9vci1hbm5hLWFuZC10aGUtZnJlbmNoLWtpc3MtMl8zODUvaW5kZXguaHRtbCIgdGl0bGU9IkxvbGEgYW5kIHRoZSBCb3kgTmV4dCBEb29yIChBbm5hIGFuZCB0aGUgRnJlbmNoIEtpc3MgIzIpIj5Mb2xhIGFuZCB0aGUgQm95IC4uLjwvYT48L2gzPgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdF9wcmljZSI+CiAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgICAgIDxwIGNsYXNzPSJwcmljZV9jb2xvciI+wqMyMy42MzwvcD4KICAgIAoKPHAgY2xhc3M9Imluc3RvY2sgYXZhaWxhYmlsaXR5Ij4KICAgIDxpIGNsYXNzPSJpY29uLW9rIj48L2k+CiAgICAKICAgICAgICBJbiBzdG9jawogICAgCjwvcD4KCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgPGZvcm0+CiAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgYnRuLWJsb2NrIiBkYXRhLWxvYWRpbmctdGV4dD0iQWRkaW5nLi4uIj5BZGQgdG8gYmFza2V0PC9idXR0b24+CiAgICA8L2Zvcm0+CgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvYXJ0aWNsZT4KCjwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY29sLXhzLTYgY29sLXNtLTQgY29sLW1kLTMgY29sLWxnLTMiPgoKCgoKCgogICAgPGFydGljbGUgY2xhc3M9InByb2R1Y3RfcG9kIj4KICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2VfY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImxvZ2FuLWthZGUtZmFsbGVuLWNyZXN0LWhpZ2gtNTVfMzg0L2luZGV4Lmh0bWwiPjxpbWcgc3JjPSIuLi9tZWRpYS9jYWNoZS9kOS80ZS9kOTRlNjIwNmMyZGVjZDNhY2Q5YTYxYjJjYmFjN2VhZi5qcGciIGFsdD0iTG9nYW4gS2FkZSAoRmFsbGVuIENyZXN0IEhpZ2ggIzUuNSkiIGNsYXNzPSJ0aHVtYm5haWwiPjwvYT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHAgY2xhc3M9InN0YXItcmF0aW5nIFR3byI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgCiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8aDM+PGEgaHJlZj0ibG9nYW4ta2FkZS1mYWxsZW4tY3Jlc3QtaGlnaC01NV8zODQvaW5kZXguaHRtbCIgdGl0bGU9IkxvZ2FuIEthZGUgKEZhbGxlbiBDcmVzdCBIaWdoICM1LjUpIj5Mb2dhbiBLYWRlIChGYWxsZW4gQ3Jlc3QgLi4uPC9hPjwvaDM+CiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0X3ByaWNlIj4KICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICAgICAgPHAgY2xhc3M9InByaWNlX2NvbG9yIj7CozEzLjEyPC9wPgogICAgCgo8cCBjbGFzcz0iaW5zdG9jayBhdmFpbGFiaWxpdHkiPgogICAgPGkgY2xhc3M9Imljb24tb2siPjwvaT4KICAgIAogICAgICAgIEluIHN0b2NrCiAgICAKPC9wPgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAoKCgoKCgogICAgCiAgICA8Zm9ybT4KICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBidG4tYmxvY2siIGRhdGEtbG9hZGluZy10ZXh0PSJBZGRpbmcuLi4iPkFkZCB0byBiYXNrZXQ8L2J1dHRvbj4KICAgIDwvZm9ybT4KCgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgPC9hcnRpY2xlPgoKPC9saT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJjb2wteHMtNiBjb2wtc20tNCBjb2wtbWQtMyBjb2wtbGctMyI+CgoKCgoKCiAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZHVjdF9wb2QiPgogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWFnZV9jb250YWluZXIiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0ibGFzdC1vbmUtaG9tZS1uZXctYmVnaW5uaW5ncy0xXzM4My9pbmRleC5odG1sIj48aW1nIHNyYz0iLi4vbWVkaWEvY2FjaGUvZTQvMGEvZTQwYTMzNjYyMmZlNTc4Njk5YmU1YTFlZWJhMThmOWQuanBnIiBhbHQ9Ikxhc3QgT25lIEhvbWUgKE5ldyBCZWdpbm5pbmdzICMxKSIgY2xhc3M9InRodW1ibmFpbCI+PC9hPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8cCBjbGFzcz0ic3Rhci1yYXRpbmcgVGhyZWUiPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIAogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGgzPjxhIGhyZWY9Imxhc3Qtb25lLWhvbWUtbmV3LWJlZ2lubmluZ3MtMV8zODMvaW5kZXguaHRtbCIgdGl0bGU9Ikxhc3QgT25lIEhvbWUgKE5ldyBCZWdpbm5pbmdzICMxKSI+TGFzdCBPbmUgSG9tZSAoTmV3IC4uLjwvYT48L2gzPgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdF9wcmljZSI+CiAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgICAgIDxwIGNsYXNzPSJwcmljZV9jb2xvciI+wqM1OS45ODwvcD4KICAgIAoKPHAgY2xhc3M9Imluc3RvY2sgYXZhaWxhYmlsaXR5Ij4KICAgIDxpIGNsYXNzPSJpY29uLW9rIj48L2k+CiAgICAKICAgICAgICBJbiBzdG9jawogICAgCjwvcD4KCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKCgoKCgoKICAgIAogICAgPGZvcm0+CiAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgYnRuLWJsb2NrIiBkYXRhLWxvYWRpbmctdGV4dD0iQWRkaW5nLi4uIj5BZGQgdG8gYmFza2V0PC9idXR0b24+CiAgICA8L2Zvcm0+CgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvYXJ0aWNsZT4KCjwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY29sLXhzLTYgY29sLXNtLTQgY29sLW1kLTMgY29sLWxnLTMiPgoKCgoKCgogICAgPGFydGljbGUgY2xhc3M9InByb2R1Y3RfcG9kIj4KICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW1hZ2VfY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImtpbGxpbmctZmxvb3ItamFjay1yZWFjaGVyLTFfMzgyL2luZGV4Lmh0bWwiPjxpbWcgc3JjPSIuLi9tZWRpYS9jYWNoZS9lYi9lOS9lYmU5ZjA2Y2NlYmY4M2Q5ODUzYTg0NjA1MmI1OGZmZi5qcGciIGFsdD0iS2lsbGluZyBGbG9vciAoSmFjayBSZWFjaGVyICMxKSIgY2xhc3M9InRodW1ibmFpbCI+PC9hPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8cCBjbGFzcz0ic3Rhci1yYXRpbmcgRm91ciI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgCiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8aDM+PGEgaHJlZj0ia2lsbGluZy1mbG9vci1qYWNrLXJlYWNoZXItMV8zODIvaW5kZXguaHRtbCIgdGl0bGU9IktpbGxpbmcgRmxvb3IgKEphY2sgUmVhY2hlciAjMSkiPktpbGxpbmcgRmxvb3IgKEphY2sgUmVhY2hlciAuLi48L2E+PC9oMz4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3RfcHJpY2UiPgogICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgICAgICA8cCBjbGFzcz0icHJpY2VfY29sb3IiPsKjMzEuNDk8L3A+CiAgICAKCjxwIGNsYXNzPSJpbnN0b2NrIGF2YWlsYWJpbGl0eSI+CiAgICA8aSBjbGFzcz0iaWNvbi1vayI+PC9pPgogICAgCiAgICAgICAgSW4gc3RvY2sKICAgIAo8L3A+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgIDxmb3JtPgogICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayIgZGF0YS1sb2FkaW5nLXRleHQ9IkFkZGluZy4uLiI+QWRkIHRvIGJhc2tldDwvYnV0dG9uPgogICAgPC9mb3JtPgoKCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L2FydGljbGU+Cgo8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImNvbC14cy02IGNvbC1zbS00IGNvbC1tZC0zIGNvbC1sZy0zIj4KCgoKCgoKICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9kdWN0X3BvZCI+CiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImltYWdlX2NvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJraWxsLXRoZS1ib3ktYmFuZF8zODEvaW5kZXguaHRtbCI+PGltZyBzcmM9Ii4uL21lZGlhL2NhY2hlLzA1Lzc0LzA1NzRhNzFjY2FmZjFmZWYxZjhlOWExZjRjMjJiN2JjLmpwZyIgYWx0PSJLaWxsIHRoZSBCb3kgQmFuZCIgY2xhc3M9InRodW1ibmFpbCI+PC9hPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8cCBjbGFzcz0ic3Rhci1yYXRpbmcgRml2ZSI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1zdGFyIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Imljb24tc3RhciI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLXN0YXIiPjwvaT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgCiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8aDM+PGEgaHJlZj0ia2lsbC10aGUtYm95LWJhbmRfMzgxL2luZGV4Lmh0bWwiIHRpdGxlPSJLaWxsIHRoZSBCb3kgQmFuZCI+S2lsbCB0aGUgQm95IEJhbmQ8L2E+PC9oMz4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3RfcHJpY2UiPgogICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgICAgICA8cCBjbGFzcz0icHJpY2VfY29sb3IiPsKjMTUuNTI8L3A+CiAgICAKCjxwIGNsYXNzPSJpbnN0b2NrIGF2YWlsYWJpbGl0eSI+CiAgICA8aSBjbGFzcz0iaWNvbi1vayI+PC9pPgogICAgCiAgICAgICAgSW4gc3RvY2sKICAgIAo8L3A+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCgoKCgoKCiAgICAKICAgIDxmb3JtPgogICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayIgZGF0YS1sb2FkaW5nLXRleHQ9IkFkZGluZy4uLiI+QWRkIHRvIGJhc2tldDwvYnV0dG9uPgogICAgPC9mb3JtPgoKCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L2FydGljbGU+Cgo8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdj4KICAgICAgICA8dWwgY2xhc3M9InBhZ2VyIj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InByZXZpb3VzIj48YSBocmVmPSJwYWdlLTMwLmh0bWwiPnByZXZpb3VzPC9hPjwvbGk+CiAgICAgICAgICAgIAogICAgICAgICAgICA8bGkgY2xhc3M9ImN1cnJlbnQiPgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIFBhZ2UgMzEgb2YgNTAKICAgICAgICAgICAgCiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuZXh0Ij48YSBocmVmPSJwYWdlLTMyLmh0bWwiPm5leHQ8L2E+PC9saT4KICAgICAgICAgICAgCiAgICAgICAgPC91bD4KICAgIDwvZGl2PgoKCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvc2VjdGlvbj4KICAgIAoKCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICA8L2Rpdj48IS0tIC9yb3cgLS0+CiAgICA8L2Rpdj48IS0tIC9wYWdlX2lubmVyIC0tPgo8L2Rpdj48IS0tIC9jb250YWluZXItZmx1aWQgLS0+CgoKICAgIAo8Zm9vdGVyIGNsYXNzPSJmb290ZXIgY29udGFpbmVyLWZsdWlkIj4KICAgIAogICAgICAgIAogICAgCjwvZm9vdGVyPgoKCiAgICAgICAgCiAgICAgICAgCiAgCiAgICAgICAgICAgIDwhLS0galF1ZXJ5IC0tPgogICAgICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cDovL2FqYXguZ29vZ2xlYXBpcy5jb20vYWpheC9saWJzL2pxdWVyeS8xLjkuMS9qcXVlcnkubWluLmpzIj48L3NjcmlwdD4KICAgICAgICAgICAgPHNjcmlwdD53aW5kb3cualF1ZXJ5IHx8IGRvY3VtZW50LndyaXRlKCc8c2NyaXB0IHNyYz0iLi4vc3RhdGljL29zY2FyL2pzL2pxdWVyeS9qcXVlcnktMS45LjEubWluLmpzIj48XC9zY3JpcHQ+Jyk8L3NjcmlwdD4KICAgICAgICAKICAKCgogICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgCiAgICA8IS0tIFR3aXR0ZXIgQm9vdHN0cmFwIC0tPgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iLi4vc3RhdGljL29zY2FyL2pzL2Jvb3RzdHJhcDMvYm9vdHN0cmFwLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8IS0tIE9zY2FyIC0tPgogICAgPHNjcmlwdCBzcmM9Ii4uL3N0YXRpYy9vc2Nhci9qcy9vc2Nhci91aS5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBjaGFyc2V0PSJ1dGYtOCI+PC9zY3JpcHQ+CgogICAgPHNjcmlwdCBzcmM9Ii4uL3N0YXRpYy9vc2Nhci9qcy9ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXIvYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGNoYXJzZXQ9InV0Zi04Ij48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSIuLi9zdGF0aWMvb3NjYXIvanMvYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyL2xvY2FsZXMvYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyLmFsbC5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBjaGFyc2V0PSJ1dGYtOCI+PC9zY3JpcHQ+CgoKICAgICAgICAKICAgICAgICAKICAgIAoKICAgIAoKCiAgICAgICAgCiAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAkKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgCiAgICAKICAgIAogICAgb3NjYXIuaW5pdCgpOwoKICAgIG9zY2FyLnNlYXJjaC5pbml0KCk7CgogICAgICAgICAgICB9KTsKICAgICAgICA8L3NjcmlwdD4KCiAgICAgICAgCiAgICAgICAgPCEtLSBWZXJzaW9uOiBOL0EgLS0+CiAgICAgICAgCiAgICA8L2JvZHk+CjwvaHRtbD4K
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:23 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-32.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:23 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:23 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-33.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:23 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:23 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-34.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:23 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:23 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-35.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:24 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:24 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-36.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:24 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:24 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-37.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:24 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:24 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-38.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:24 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:24 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-39.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:24 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:24 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-40.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:24 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:24 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-41.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:24 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:24 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-42.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:24 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:24 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-43.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:24 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:24 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-44.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:24 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:24 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-45.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:24 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:24 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-46.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:24 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:25 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-47.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:25 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:25 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-48.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:25 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:25 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-49.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:25 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:25 GMT
- request:
    method: get
    uri: http://books.toscrape.com/catalogue/page-50.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.12.1
      Date:
      - Wed, 07 Nov 2018 22:20:25 GMT
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Last-Modified:
      - Wed, 29 Jun 2016 21:15:59 GMT
      X-Upstream:
      - toscrape-books-master_web
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 07 Nov 2018 22:20:25 GMT
recorded_with: VCR 4.0.0
